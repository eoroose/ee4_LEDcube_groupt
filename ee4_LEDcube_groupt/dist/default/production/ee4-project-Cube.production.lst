

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 23 19:21:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F25K50 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001C36                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _all_notes
    80  001C36  E2BC               	dw	58044
    81  001C38  E0D3               	dw	57555
    82  001C3A  DCE6               	dw	56550
    83  001C3C  D895               	dw	55445
    84  001C3E  D3B0               	dw	54192
    85  001C40  D0FB               	dw	53499
    86  001C42  CB3A               	dw	52026
    87  001C44  C4BD               	dw	50365
    88  001C46  C13B               	dw	49467
    89  001C48  B971               	dw	47473
    90  001C4A  B0D6               	dw	45270
    91  001C4C  A71B               	dw	42779
    92  001C4E  A1AA               	dw	41386
    93  001C50  95EF               	dw	38383
    94  001C52  8921               	dw	35105
    95                           
    96                           ;initializer for _randx
    97  001C54  0001               	dw	1
    98  001C56  0000               	dw	0
    99                           
   100                           	psect	idataBANK0
   101  001936                     __pidataBANK0:
   102                           	opt callstack 0
   103                           
   104                           ;initializer for _loser_melody
   105  001936  E2BC               	dw	58044
   106  001938  E2BC               	dw	58044
   107  00193A  E2BC               	dw	58044
   108  00193C  E0D3               	dw	57555
   109  00193E  E0D3               	dw	57555
   110  001940  E0D3               	dw	57555
   111  001942  DCE6               	dw	56550
   112  001944  DCE6               	dw	56550
   113  001946  DCE6               	dw	56550
   114  001948  D895               	dw	55445
   115  00194A  D895               	dw	55445
   116  00194C  D895               	dw	55445
   117  00194E  D3B0               	dw	54192
   118  001950  D3B0               	dw	54192
   119  001952  D3B0               	dw	54192
   120  001954  D0FB               	dw	53499
   121  001956  D0FB               	dw	53499
   122  001958  D0FB               	dw	53499
   123  00195A  CB3A               	dw	52026
   124  00195C  CB3A               	dw	52026
   125  00195E  CB3A               	dw	52026
   126  001960  C4BD               	dw	50365
   127  001962  C4BD               	dw	50365
   128  001964  C4BD               	dw	50365
   129  001966  C13B               	dw	49467
   130  001968  C13B               	dw	49467
   131  00196A  C13B               	dw	49467
   132  00196C  B971               	dw	47473
   133  00196E  B971               	dw	47473
   134  001970  B971               	dw	47473
   135  001972  B0D6               	dw	45270
   136  001974  B0D6               	dw	45270
   137  001976  B0D6               	dw	45270
   138  001978  A71B               	dw	42779
   139  00197A  A71B               	dw	42779
   140  00197C  A71B               	dw	42779
   141  00197E  A1AA               	dw	41386
   142  001980  A1AA               	dw	41386
   143  001982  A1AA               	dw	41386
   144  001984  95EF               	dw	38383
   145  001986  95EF               	dw	38383
   146  001988  95EF               	dw	38383
   147  00198A  8921               	dw	35105
   148  00198C  8921               	dw	35105
   149  00198E  8921               	dw	35105
   150                           
   151                           	psect	idataBANK1
   152  0017E0                     __pidataBANK1:
   153                           	opt callstack 0
   154                           
   155                           ;initializer for _start_melody
   156  0017E0  BD39               	dw	48441
   157  0017E2  95EF               	dw	38383
   158  0017E4  B0D6               	dw	45270
   159  0017E6  BD39               	dw	48441
   160  0017E8  C4BD               	dw	50365
   161  0017EA  A71B               	dw	42779
   162  0017EC  B971               	dw	47473
   163  0017EE  BD39               	dw	48441
   164  0017F0  B0D6               	dw	45270
   165  0017F2  BD39               	dw	48441
   166  0017F4  CB3A               	dw	52026
   167  0017F6  CE05               	dw	52741
   168  0017F8  B0D6               	dw	45270
   169  0017FA  CB3A               	dw	52026
   170  0017FC  C4BD               	dw	50365
   171  0017FE  BD39               	dw	48441
   172  001800  95EF               	dw	38383
   173  001802  B0D6               	dw	45270
   174  001804  BD39               	dw	48441
   175  001806  C4BD               	dw	50365
   176  001808  A71B               	dw	42779
   177  00180A  B971               	dw	47473
   178  00180C  BD39               	dw	48441
   179  00180E  B0D6               	dw	45270
   180  001810  BD39               	dw	48441
   181  001812  CB3A               	dw	52026
   182  001814  CE05               	dw	52741
   183  001816  B0D6               	dw	45270
   184  001818  CB3A               	dw	52026
   185  00181A  C4BD               	dw	50365
   186  00181C  BD39               	dw	48441
   187  00181E  95EF               	dw	38383
   188  001820  B0D6               	dw	45270
   189  001822  BD39               	dw	48441
   190  001824  C4BD               	dw	50365
   191  001826  A71B               	dw	42779
   192  001828  B971               	dw	47473
   193  00182A  BD39               	dw	48441
   194  00182C  B0D6               	dw	45270
   195  00182E  BD39               	dw	48441
   196  001830  CB3A               	dw	52026
   197  001832  CE05               	dw	52741
   198  001834  B0D6               	dw	45270
   199  001836  CB3A               	dw	52026
   200  001838  C4BD               	dw	50365
   201  00183A  BD39               	dw	48441
   202  00183C  95EF               	dw	38383
   203  00183E  B0D6               	dw	45270
   204  001840  BD39               	dw	48441
   205  001842  B971               	dw	47473
   206  001844  8921               	dw	35105
   207  001846  A71B               	dw	42779
   208  001848  B0D6               	dw	45270
   209  00184A  A71B               	dw	42779
   210  00184C  B0D6               	dw	45270
   211  00184E  A71B               	dw	42779
   212  001850  B0D6               	dw	45270
   213  001852  B971               	dw	47473
   214  0000                     _ANSELCbits	set	3933
   215  0000                     _TMR1	set	4046
   216  0000                     _TMR0L	set	4054
   217  0000                     _TMR0H	set	4055
   218  0000                     _T0CONbits	set	4053
   219  0000                     _TRISCbits	set	3988
   220  0000                     _TRISBbits	set	3987
   221  0000                     _TRISAbits	set	3986
   222  0000                     _OSCCONbits	set	4051
   223  0000                     _LATC	set	3979
   224  0000                     _LATA	set	3977
   225  0000                     _IPR2bits	set	4002
   226  0000                     _PIE2bits	set	4000
   227  0000                     _T3CONbits	set	4017
   228  0000                     _TMR3L	set	4018
   229  0000                     _TMR3H	set	4019
   230  0000                     _PIR2bits	set	4001
   231  0000                     _IPR1bits	set	3999
   232  0000                     _INTCONbits	set	4082
   233  0000                     _PIE1bits	set	3997
   234  0000                     _LATAbits	set	3977
   235  0000                     _PIR1bits	set	3998
   236  0000                     _T1CONbits	set	4045
   237  0000                     _LATBbits	set	3978
   238  0000                     _LATB	set	3978
   239  0000                     _PORTBbits	set	3969
   240  0000                     _PORTCbits	set	3970
   241                           
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245  00175A                     __pcinit:
   246                           	opt callstack 0
   247  00175A                     start_initialization:
   248                           	opt callstack 0
   249  00175A                     __initialization:
   250                           	opt callstack 0
   251                           
   252                           ; Initialize objects allocated to BANK1 (116 bytes)
   253                           ; load TBLPTR registers with __pidataBANK1
   254  00175A  0EE0               	movlw	low __pidataBANK1
   255  00175C  6EF6               	movwf	tblptrl,c
   256  00175E  0E17               	movlw	high __pidataBANK1
   257  001760  6EF7               	movwf	tblptrh,c
   258  001762  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   259  001764  6EF8               	movwf	tblptru,c
   260  001766  EE01  F000         	lfsr	0,__pdataBANK1
   261  00176A  EE10 F074          	lfsr	1,116
   262  00176E                     copy_data0:
   263  00176E  0009               	tblrd		*+
   264  001770  CFF5 FFEE          	movff	tablat,postinc0
   265  001774  50E5               	movf	postdec1,w,c
   266  001776  50E1               	movf	fsr1l,w,c
   267  001778  E1FA               	bnz	copy_data0
   268                           
   269                           ; Initialize objects allocated to BANK0 (90 bytes)
   270                           ; load TBLPTR registers with __pidataBANK0
   271  00177A  0E36               	movlw	low __pidataBANK0
   272  00177C  6EF6               	movwf	tblptrl,c
   273  00177E  0E19               	movlw	high __pidataBANK0
   274  001780  6EF7               	movwf	tblptrh,c
   275  001782  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   276  001784  6EF8               	movwf	tblptru,c
   277  001786  EE00  F060         	lfsr	0,__pdataBANK0
   278  00178A  EE10 F05A          	lfsr	1,90
   279  00178E                     copy_data1:
   280  00178E  0009               	tblrd		*+
   281  001790  CFF5 FFEE          	movff	tablat,postinc0
   282  001794  50E5               	movf	postdec1,w,c
   283  001796  50E1               	movf	fsr1l,w,c
   284  001798  E1FA               	bnz	copy_data1
   285                           
   286                           ; Initialize objects allocated to COMRAM (34 bytes)
   287                           ; load TBLPTR registers with __pidataCOMRAM
   288  00179A  0E36               	movlw	low __pidataCOMRAM
   289  00179C  6EF6               	movwf	tblptrl,c
   290  00179E  0E1C               	movlw	high __pidataCOMRAM
   291  0017A0  6EF7               	movwf	tblptrh,c
   292  0017A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   293  0017A4  6EF8               	movwf	tblptru,c
   294  0017A6  EE00  F001         	lfsr	0,__pdataCOMRAM
   295  0017AA  EE10 F022          	lfsr	1,34
   296  0017AE                     copy_data2:
   297  0017AE  0009               	tblrd		*+
   298  0017B0  CFF5 FFEE          	movff	tablat,postinc0
   299  0017B4  50E5               	movf	postdec1,w,c
   300  0017B6  50E1               	movf	fsr1l,w,c
   301  0017B8  E1FA               	bnz	copy_data2
   302                           
   303                           ; Clear objects allocated to BANK2 (200 bytes)
   304  0017BA  EE02  F000         	lfsr	0,__pbssBANK2
   305  0017BE  0EC8               	movlw	200
   306  0017C0                     clear_0:
   307  0017C0  6AEE               	clrf	postinc0,c
   308  0017C2  06E8               	decf	wreg,f,c
   309  0017C4  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to COMRAM (26 bytes)
   312  0017C6  EE00  F023         	lfsr	0,__pbssCOMRAM
   313  0017CA  0E1A               	movlw	26
   314  0017CC                     clear_1:
   315  0017CC  6AEE               	clrf	postinc0,c
   316  0017CE  06E8               	decf	wreg,f,c
   317  0017D0  E1FD               	bnz	clear_1
   318  0017D2                     end_of_initialization:
   319                           	opt callstack 0
   320  0017D2                     __end_of__initialization:
   321                           	opt callstack 0
   322  0017D2  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323  0017D4  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324  0017D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   325  0017D8  6EF8               	movwf	tblptru,c
   326  0017DA  0100               	movlb	0
   327  0017DC  EF3A  F00E         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330  000023                     __pbssCOMRAM:
   331                           	opt callstack 0
   332  000023                     _timer_preload:
   333                           	opt callstack 0
   334  000023                     	ds	2
   335  000025                     	ds	2
   336  000027                     _wait_time:
   337                           	opt callstack 0
   338  000027                     	ds	2
   339  000029                     _game_lenght:
   340                           	opt callstack 0
   341  000029                     	ds	2
   342  00002B                     _count:
   343                           	opt callstack 0
   344  00002B                     	ds	2
   345  00002D                     _score:
   346                           	opt callstack 0
   347  00002D                     	ds	2
   348  00002F                     _game_time:
   349                           	opt callstack 0
   350  00002F                     	ds	2
   351  000031                     _time:
   352                           	opt callstack 0
   353  000031                     	ds	2
   354  000033                     _led1_output:
   355                           	opt callstack 0
   356  000033                     	ds	1
   357  000034                     _servo_counter:
   358                           	opt callstack 0
   359  000034                     	ds	1
   360  000035                     _servo_setpoint:
   361                           	opt callstack 0
   362  000035                     	ds	1
   363  000036                     _stop:
   364                           	opt callstack 0
   365  000036                     	ds	1
   366  000037                     _melody_index:
   367                           	opt callstack 0
   368  000037                     	ds	1
   369  000038                     _loser:
   370                           	opt callstack 0
   371  000038                     	ds	1
   372  000039                     _status:
   373                           	opt callstack 0
   374  000039                     	ds	1
   375  00003A                     _next_led:
   376                           	opt callstack 0
   377  00003A                     	ds	1
   378  00003B                     _led_switch:
   379                           	opt callstack 0
   380  00003B                     	ds	1
   381  00003C                     _current_state:
   382                           	opt callstack 0
   383  00003C                     	ds	1
   384                           
   385                           	psect	dataCOMRAM
   386  000001                     __pdataCOMRAM:
   387                           	opt callstack 0
   388  000001                     _all_notes:
   389                           	opt callstack 0
   390  000001                     	ds	30
   391  00001F                     _randx:
   392                           	opt callstack 0
   393  00001F                     	ds	4
   394                           
   395                           	psect	dataBANK0
   396  000060                     __pdataBANK0:
   397                           	opt callstack 0
   398  000060                     _loser_melody:
   399                           	opt callstack 0
   400  000060                     	ds	90
   401                           
   402                           	psect	dataBANK1
   403  000100                     __pdataBANK1:
   404                           	opt callstack 0
   405  000100                     _start_melody:
   406                           	opt callstack 0
   407  000100                     	ds	116
   408                           
   409                           	psect	bssBANK2
   410  000200                     __pbssBANK2:
   411                           	opt callstack 0
   412  000200                     _game3seq:
   413                           	opt callstack 0
   414  000200                     	ds	200
   415                           
   416                           	psect	cstackCOMRAM
   417  00003D                     __pcstackCOMRAM:
   418                           	opt callstack 0
   419  00003D                     ??_AUDIO_ISR:
   420  00003D                     
   421                           ; 1 bytes @ 0x0
   422  00003D                     	ds	1
   423  00003E                     ??_OpenTimer1:
   424  00003E                     ??_OpenTimer0:
   425  00003E                     ?_abs:
   426                           	opt callstack 0
   427  00003E                     ?___lwdiv:
   428                           	opt callstack 0
   429  00003E                     ?___lmul:
   430                           	opt callstack 0
   431  00003E                     fire_led@ledint:
   432                           	opt callstack 0
   433  00003E                     AUDIO_play@freq:
   434                           	opt callstack 0
   435  00003E                     ___lwdiv@dividend:
   436                           	opt callstack 0
   437  00003E                     abs@a:
   438                           	opt callstack 0
   439  00003E                     srand@x:
   440                           	opt callstack 0
   441  00003E                     ___lmul@multiplier:
   442                           	opt callstack 0
   443                           
   444                           ; 4 bytes @ 0x1
   445  00003E                     	ds	2
   446  000040                     ??_abs:
   447  000040                     OpenTimer1@intEnable:
   448                           	opt callstack 0
   449  000040                     OpenTimer0@intEnable:
   450                           	opt callstack 0
   451  000040                     ___lwdiv@divisor:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x3
   455  000040                     	ds	1
   456  000041                     
   457                           ; 1 bytes @ 0x4
   458  000041                     	ds	1
   459  000042                     ___lwdiv@quotient:
   460                           	opt callstack 0
   461  000042                     ___lmul@multiplicand:
   462                           	opt callstack 0
   463                           
   464                           ; 4 bytes @ 0x5
   465  000042                     	ds	2
   466  000044                     ___lwdiv@counter:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x7
   470  000044                     	ds	2
   471  000046                     ___lmul@product:
   472                           	opt callstack 0
   473                           
   474                           ; 4 bytes @ 0x9
   475  000046                     	ds	4
   476  00004A                     ?_rand:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0xD
   480  00004A                     	ds	2
   481  00004C                     ?___awmod:
   482                           	opt callstack 0
   483  00004C                     ___awmod@dividend:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0xF
   487  00004C                     	ds	2
   488  00004E                     ___awmod@divisor:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x11
   492  00004E                     	ds	2
   493  000050                     ___awmod@counter:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0x13
   497  000050                     	ds	1
   498  000051                     ___awmod@sign:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0x14
   502  000051                     	ds	1
   503  000052                     ??_fsm_cube:
   504                           
   505                           ; 1 bytes @ 0x15
   506  000052                     	ds	4
   507  000056                     
   508                           ; 1 bytes @ 0x19
   509 ;;
   510 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   511 ;;
   512 ;; *************** function _main *****************
   513 ;; Defined at:
   514 ;;		line 38 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   528 ;;      Params:         0       0       0       0       0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels required when called:    5
   534 ;; This function calls:
   535 ;;		_fsm_cube
   536 ;;		_init
   537 ;;		_timed_to_1ms
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text0
   544  001C74                     __ptext0:
   545                           	opt callstack 0
   546  001C74                     _main:
   547                           	opt callstack 26
   548                           
   549                           ;main.c: 39: init();
   550                           
   551                           ;incstack = 0
   552  001C74  EC6F  F00D         	call	_init	;wreg free
   553                           
   554                           ;main.c: 40: while(timed_to_1ms()) {
   555  001C78  D002               	goto	l2341
   556  001C7A                     l2339:
   557                           
   558                           ;main.c: 43: fsm_cube();
   559  001C7A  EC0B  F008         	call	_fsm_cube	;wreg free
   560  001C7E                     l2341:
   561  001C7E  EC50  F00E         	call	_timed_to_1ms	;wreg free
   562  001C82  0900               	iorlw	0
   563  001C84  B4D8               	btfsc	status,2,c
   564  001C86  EF09  F008         	goto	start
   565  001C8A  D7F7               	goto	l2339
   566  001C8C                     __end_of_main:
   567                           	opt callstack 0
   568                           
   569 ;; *************** function _timed_to_1ms *****************
   570 ;; Defined at:
   571 ;;		line 137 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      unsigned char 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   585 ;;      Params:         0       0       0       0       0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    2
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text1
   600  001CA0                     __ptext1:
   601                           	opt callstack 0
   602  001CA0                     _timed_to_1ms:
   603                           	opt callstack 28
   604                           
   605                           ;main.c: 138: while(!INTCONbits.TMR0IF){__nop();};
   606                           
   607                           ;incstack = 0
   608  001CA0  D001               	goto	l335
   609  001CA2                     l336:
   610  001CA2  F000               	nop	
   611  001CA4                     l335:
   612  001CA4  A4F2               	btfss	4082,2,c	;volatile
   613  001CA6  D7FD               	goto	l336
   614                           
   615                           ;main.c: 139: TMR0L = 7;
   616  001CA8  0E07               	movlw	7
   617  001CAA  6ED6               	movwf	4054,c	;volatile
   618                           
   619                           ;main.c: 140: INTCONbits.TMR0IF = 0;
   620  001CAC  94F2               	bcf	4082,2,c	;volatile
   621                           
   622                           ;main.c: 141: return 1;
   623  001CAE  0E01               	movlw	1
   624  001CB0  0012               	return		;funcret
   625  001CB2                     __end_of_timed_to_1ms:
   626                           	opt callstack 0
   627                           
   628 ;; *************** function _init *****************
   629 ;; Defined at:
   630 ;;		line 59 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   644 ;;      Params:         0       0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    4
   651 ;; This function calls:
   652 ;;		_AUDIO_init
   653 ;;		_OpenTimer0
   654 ;;		_fsm_cube_init
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text2
   661  001ADE                     __ptext2:
   662                           	opt callstack 0
   663  001ADE                     _init:
   664                           	opt callstack 26
   665                           
   666                           ;main.c: 60: LATA = 0x00;
   667                           
   668                           ;incstack = 0
   669  001ADE  0E00               	movlw	0
   670  001AE0  6E89               	movwf	3977,c	;volatile
   671                           
   672                           ;main.c: 61: LATB = 0x00;
   673  001AE2  0E00               	movlw	0
   674  001AE4  6E8A               	movwf	3978,c	;volatile
   675                           
   676                           ;main.c: 62: LATC = 0x00;
   677  001AE6  0E00               	movlw	0
   678  001AE8  6E8B               	movwf	3979,c	;volatile
   679                           
   680                           ;main.c: 63: OpenTimer0(0);
   681  001AEA  0E00               	movlw	0
   682  001AEC  ECF3  F00C         	call	_OpenTimer0
   683                           
   684                           ;main.c: 64: OSCCONbits.IRCF = 0b111;
   685  001AF0  0E70               	movlw	112
   686  001AF2  12D3               	iorwf	4051,f,c	;volatile
   687                           
   688                           ;main.c: 67: ANSELCbits.ANSC7 = 0;
   689  001AF4  010F               	movlb	15	; () banked
   690  001AF6  9F5D               	bcf	93,7,b	;volatile
   691                           
   692                           ; BSR set to: 15
   693                           ;main.c: 68: ANSELCbits.ANSC6 = 0;
   694  001AF8  9D5D               	bcf	93,6,b	;volatile
   695                           
   696                           ; BSR set to: 15
   697                           ;main.c: 69: ANSELCbits.ANSC2 = 0;
   698  001AFA  955D               	bcf	93,2,b	;volatile
   699                           
   700                           ; BSR set to: 15
   701                           ;main.c: 70: TRISAbits.TRISA0 = 0;
   702  001AFC  9092               	bcf	3986,0,c	;volatile
   703                           
   704                           ; BSR set to: 15
   705                           ;main.c: 71: TRISAbits.TRISA1 = 0;
   706  001AFE  9292               	bcf	3986,1,c	;volatile
   707                           
   708                           ; BSR set to: 15
   709                           ;main.c: 72: TRISAbits.TRISA2 = 0;
   710  001B00  9492               	bcf	3986,2,c	;volatile
   711                           
   712                           ; BSR set to: 15
   713                           ;main.c: 73: TRISAbits.TRISA3 = 0;
   714  001B02  9692               	bcf	3986,3,c	;volatile
   715                           
   716                           ; BSR set to: 15
   717                           ;main.c: 74: TRISAbits.TRISA4 = 0;
   718  001B04  9892               	bcf	3986,4,c	;volatile
   719                           
   720                           ; BSR set to: 15
   721                           ;main.c: 75: TRISAbits.TRISA5 = 0;
   722  001B06  9A92               	bcf	3986,5,c	;volatile
   723                           
   724                           ; BSR set to: 15
   725                           ;main.c: 77: TRISBbits.TRISB0 = 1;
   726  001B08  8093               	bsf	3987,0,c	;volatile
   727                           
   728                           ; BSR set to: 15
   729                           ;main.c: 78: TRISBbits.TRISB1 = 1;
   730  001B0A  8293               	bsf	3987,1,c	;volatile
   731                           
   732                           ; BSR set to: 15
   733                           ;main.c: 79: TRISBbits.TRISB2 = 0;
   734  001B0C  9493               	bcf	3987,2,c	;volatile
   735                           
   736                           ; BSR set to: 15
   737                           ;main.c: 80: TRISBbits.TRISB3 = 0;
   738  001B0E  9693               	bcf	3987,3,c	;volatile
   739                           
   740                           ; BSR set to: 15
   741                           ;main.c: 81: TRISBbits.TRISB4 = 0;
   742  001B10  9893               	bcf	3987,4,c	;volatile
   743                           
   744                           ; BSR set to: 15
   745                           ;main.c: 82: TRISBbits.TRISB5 = 0;
   746  001B12  9A93               	bcf	3987,5,c	;volatile
   747                           
   748                           ; BSR set to: 15
   749                           ;main.c: 83: TRISBbits.TRISB6 = 0;
   750  001B14  9C93               	bcf	3987,6,c	;volatile
   751                           
   752                           ; BSR set to: 15
   753                           ;main.c: 84: TRISBbits.TRISB7 = 0;
   754  001B16  9E93               	bcf	3987,7,c	;volatile
   755                           
   756                           ; BSR set to: 15
   757                           ;main.c: 86: TRISCbits.TRISC0 = 1;
   758  001B18  8094               	bsf	3988,0,c	;volatile
   759                           
   760                           ; BSR set to: 15
   761                           ;main.c: 87: TRISCbits.TRISC1 = 1;
   762  001B1A  8294               	bsf	3988,1,c	;volatile
   763                           
   764                           ; BSR set to: 15
   765                           ;main.c: 88: TRISCbits.TRISC2 = 1;
   766  001B1C  8494               	bsf	3988,2,c	;volatile
   767                           
   768                           ; BSR set to: 15
   769                           ;main.c: 89: TRISCbits.TRISC6 = 1;
   770  001B1E  8C94               	bsf	3988,6,c	;volatile
   771                           
   772                           ; BSR set to: 15
   773                           ;main.c: 90: TRISCbits.TRISC7 = 1;
   774  001B20  8E94               	bsf	3988,7,c	;volatile
   775                           
   776                           ; BSR set to: 15
   777                           ;main.c: 93: fsm_cube_init();
   778  001B22  ECD5  F00D         	call	_fsm_cube_init	;wreg free
   779                           
   780                           ;main.c: 105: AUDIO_init();
   781  001B26  EC46  F00E         	call	_AUDIO_init	;wreg free
   782  001B2A  0012               	return		;funcret
   783  001B2C                     __end_of_init:
   784                           	opt callstack 0
   785                           
   786 ;; *************** function _fsm_cube_init *****************
   787 ;; Defined at:
   788 ;;		line 34 in file "fsm_cube.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   802 ;;      Params:         0       0       0       0       0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    2
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_init
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text3
   817  001BAA                     __ptext3:
   818                           	opt callstack 0
   819  001BAA                     _fsm_cube_init:
   820                           	opt callstack 27
   821                           
   822                           ;fsm_cube.c: 35: current_state = FSM_ASKING;
   823                           
   824                           ;incstack = 0
   825  001BAA  0E00               	movlw	0
   826  001BAC  6E3C               	movwf	_current_state,c
   827                           
   828                           ;fsm_cube.c: 36: time = 0;
   829  001BAE  0E00               	movlw	0
   830  001BB0  6E32               	movwf	_time+1,c
   831  001BB2  0E00               	movlw	0
   832  001BB4  6E31               	movwf	_time,c
   833                           
   834                           ;fsm_cube.c: 37: led_switch=0;
   835  001BB6  0E00               	movlw	0
   836  001BB8  6E3B               	movwf	_led_switch,c
   837                           
   838                           ;fsm_cube.c: 38: game_time = 0;
   839  001BBA  0E00               	movlw	0
   840  001BBC  6E30               	movwf	_game_time+1,c
   841  001BBE  0E00               	movlw	0
   842  001BC0  6E2F               	movwf	_game_time,c
   843                           
   844                           ;fsm_cube.c: 39: score = 0;
   845  001BC2  0E00               	movlw	0
   846  001BC4  6E2E               	movwf	_score+1,c
   847  001BC6  0E00               	movlw	0
   848  001BC8  6E2D               	movwf	_score,c
   849                           
   850                           ;fsm_cube.c: 40: next_led = 0;
   851  001BCA  0E00               	movlw	0
   852  001BCC  6E3A               	movwf	_next_led,c
   853                           
   854                           ;fsm_cube.c: 41: count = 0;
   855  001BCE  0E00               	movlw	0
   856  001BD0  6E2C               	movwf	_count+1,c
   857  001BD2  0E00               	movlw	0
   858  001BD4  6E2B               	movwf	_count,c
   859                           
   860                           ;fsm_cube.c: 42: melody_index=0;
   861  001BD6  0E00               	movlw	0
   862  001BD8  6E37               	movwf	_melody_index,c
   863  001BDA  0012               	return		;funcret
   864  001BDC                     __end_of_fsm_cube_init:
   865                           	opt callstack 0
   866                           
   867 ;; *************** function _OpenTimer0 *****************
   868 ;; Defined at:
   869 ;;		line 116 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  intEnable       1    wreg     unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  intEnable       1    3[COMRAM] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   883 ;;      Params:         0       0       0       0       0       0       0       0       0
   884 ;;      Locals:         1       0       0       0       0       0       0       0       0
   885 ;;      Temps:          2       0       0       0       0       0       0       0       0
   886 ;;      Totals:         3       0       0       0       0       0       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    2
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_init
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text4
   898  0019E6                     __ptext4:
   899                           	opt callstack 0
   900  0019E6                     _OpenTimer0:
   901                           	opt callstack 27
   902                           
   903                           ;incstack = 0
   904                           ;OpenTimer0@intEnable stored from wreg
   905  0019E6  6E40               	movwf	OpenTimer0@intEnable,c
   906                           
   907                           ;main.c: 117: T0CONbits.T08BIT = 1;
   908  0019E8  8CD5               	bsf	4053,6,c	;volatile
   909                           
   910                           ;main.c: 118: T0CONbits.T0CS = 0;
   911  0019EA  9AD5               	bcf	4053,5,c	;volatile
   912                           
   913                           ;main.c: 119: T0CONbits.PSA = 0;
   914  0019EC  96D5               	bcf	4053,3,c	;volatile
   915                           
   916                           ;main.c: 120: T0CONbits.T0PS = 0b011;
   917  0019EE  50D5               	movf	4053,w,c	;volatile
   918  0019F0  0BF8               	andlw	-8
   919  0019F2  0903               	iorlw	3
   920  0019F4  6ED5               	movwf	4053,c	;volatile
   921                           
   922                           ;main.c: 121: TMR0H = 0;
   923  0019F6  0E00               	movlw	0
   924  0019F8  6ED7               	movwf	4055,c	;volatile
   925                           
   926                           ;main.c: 122: TMR0L = 7;
   927  0019FA  0E07               	movlw	7
   928  0019FC  6ED6               	movwf	4054,c	;volatile
   929                           
   930                           ;main.c: 124: INTCONbits.TMR0IE = intEnable & 0x01u;
   931  0019FE  C040  F03E         	movff	OpenTimer0@intEnable,??_OpenTimer0
   932  001A02  0E01               	movlw	1
   933  001A04  163E               	andwf	??_OpenTimer0,f,c
   934  001A06  3A3E               	swapf	??_OpenTimer0,f,c
   935  001A08  463E               	rlncf	??_OpenTimer0,f,c
   936  001A0A  50F2               	movf	4082,w,c	;volatile
   937  001A0C  183E               	xorwf	??_OpenTimer0,w,c
   938  001A0E  0BDF               	andlw	-33
   939  001A10  183E               	xorwf	??_OpenTimer0,w,c
   940  001A12  6EF2               	movwf	4082,c	;volatile
   941                           
   942                           ;main.c: 125: INTCONbits.GIE = (intEnable & 0x01u) | INTCONbits.GIE;
   943  001A14  AEF2               	btfss	4082,7,c	;volatile
   944  001A16  D003               	goto	u180
   945  001A18  6A3E               	clrf	??_OpenTimer0& (0+255),c
   946  001A1A  2A3E               	incf	??_OpenTimer0& (0+255),f,c
   947  001A1C  D001               	goto	u188
   948  001A1E                     u180:
   949  001A1E  6A3E               	clrf	??_OpenTimer0& (0+255),c
   950  001A20                     u188:
   951  001A20  5040               	movf	OpenTimer0@intEnable,w,c
   952  001A22  0B01               	andlw	1
   953  001A24  103E               	iorwf	??_OpenTimer0,w,c
   954  001A26  6E3F               	movwf	(??_OpenTimer0+1)& (0+255),c
   955  001A28  323F               	rrcf	??_OpenTimer0+1,f,c
   956  001A2A  323F               	rrcf	??_OpenTimer0+1,f,c
   957  001A2C  50F2               	movf	4082,w,c	;volatile
   958  001A2E  183F               	xorwf	??_OpenTimer0+1,w,c
   959  001A30  0B7F               	andlw	-129
   960  001A32  183F               	xorwf	??_OpenTimer0+1,w,c
   961  001A34  6EF2               	movwf	4082,c	;volatile
   962                           
   963                           ;main.c: 126: INTCONbits.TMR0IF = 0;
   964  001A36  94F2               	bcf	4082,2,c	;volatile
   965  001A38  0012               	return		;funcret
   966  001A3A                     __end_of_OpenTimer0:
   967                           	opt callstack 0
   968                           
   969 ;; *************** function _AUDIO_init *****************
   970 ;; Defined at:
   971 ;;		line 42 in file "func_audio.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         0       0       0       0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    3
   992 ;; This function calls:
   993 ;;		_OpenTimer1
   994 ;; This function is called by:
   995 ;;		_init
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text5
  1000  001C8C                     __ptext5:
  1001                           	opt callstack 0
  1002  001C8C                     _AUDIO_init:
  1003                           	opt callstack 26
  1004                           
  1005                           ;func_audio.c: 43: OpenTimer1(1);
  1006                           
  1007                           ;incstack = 0
  1008  001C8C  0E01               	movlw	1
  1009  001C8E  EC2A  F00C         	call	_OpenTimer1
  1010                           
  1011                           ;func_audio.c: 44: timer_preload = 0;
  1012  001C92  0E00               	movlw	0
  1013  001C94  6E24               	movwf	_timer_preload+1,c
  1014  001C96  0E00               	movlw	0
  1015  001C98  6E23               	movwf	_timer_preload,c
  1016                           
  1017                           ;func_audio.c: 45: stop = 0;
  1018  001C9A  0E00               	movlw	0
  1019  001C9C  6E36               	movwf	_stop,c
  1020  001C9E  0012               	return		;funcret
  1021  001CA0                     __end_of_AUDIO_init:
  1022                           	opt callstack 0
  1023                           
  1024 ;; *************** function _OpenTimer1 *****************
  1025 ;; Defined at:
  1026 ;;		line 103 in file "func_audio.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  intEnable       1    wreg     unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  intEnable       1    3[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1043 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    2
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_AUDIO_init
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text6
  1055  001854                     __ptext6:
  1056                           	opt callstack 0
  1057  001854                     _OpenTimer1:
  1058                           	opt callstack 26
  1059                           
  1060                           ;incstack = 0
  1061                           ;OpenTimer1@intEnable stored from wreg
  1062  001854  6E40               	movwf	OpenTimer1@intEnable,c
  1063                           
  1064                           ;func_audio.c: 104: T1CONbits.T1RD16 = 1;
  1065  001856  82CD               	bsf	4045,1,c	;volatile
  1066                           
  1067                           ;func_audio.c: 105: T1CONbits.T1CKPS = 0b00;
  1068  001858  0ECF               	movlw	-49
  1069  00185A  16CD               	andwf	4045,f,c	;volatile
  1070                           
  1071                           ;func_audio.c: 106: T1CONbits.TMR1ON = 1;
  1072  00185C  80CD               	bsf	4045,0,c	;volatile
  1073                           
  1074                           ;func_audio.c: 107: T1CONbits.TMR1CS = 1;
  1075  00185E  50CD               	movf	4045,w,c	;volatile
  1076  001860  0B3F               	andlw	-193
  1077  001862  0940               	iorlw	64
  1078  001864  6ECD               	movwf	4045,c	;volatile
  1079                           
  1080                           ;func_audio.c: 108: T1CONbits.T1SYNC = 1;
  1081  001866  84CD               	bsf	4045,2,c	;volatile
  1082                           
  1083                           ;func_audio.c: 110: PIE1bits.TMR1IE = intEnable & 0x01u;
  1084  001868  C040  F03E         	movff	OpenTimer1@intEnable,??_OpenTimer1
  1085  00186C  0E01               	movlw	1
  1086  00186E  163E               	andwf	??_OpenTimer1,f,c
  1087  001870  509D               	movf	3997,w,c	;volatile
  1088  001872  183E               	xorwf	??_OpenTimer1,w,c
  1089  001874  0BFE               	andlw	-2
  1090  001876  183E               	xorwf	??_OpenTimer1,w,c
  1091  001878  6E9D               	movwf	3997,c	;volatile
  1092                           
  1093                           ;func_audio.c: 111: INTCONbits.GIE = (intEnable & 0x01u) | INTCONbits.GIE;
  1094  00187A  AEF2               	btfss	4082,7,c	;volatile
  1095  00187C  D003               	goto	u10
  1096  00187E  6A3E               	clrf	??_OpenTimer1& (0+255),c
  1097  001880  2A3E               	incf	??_OpenTimer1& (0+255),f,c
  1098  001882  D001               	goto	u18
  1099  001884                     u10:
  1100  001884  6A3E               	clrf	??_OpenTimer1& (0+255),c
  1101  001886                     u18:
  1102  001886  5040               	movf	OpenTimer1@intEnable,w,c
  1103  001888  0B01               	andlw	1
  1104  00188A  103E               	iorwf	??_OpenTimer1,w,c
  1105  00188C  6E3F               	movwf	(??_OpenTimer1+1)& (0+255),c
  1106  00188E  323F               	rrcf	??_OpenTimer1+1,f,c
  1107  001890  323F               	rrcf	??_OpenTimer1+1,f,c
  1108  001892  50F2               	movf	4082,w,c	;volatile
  1109  001894  183F               	xorwf	??_OpenTimer1+1,w,c
  1110  001896  0B7F               	andlw	-129
  1111  001898  183F               	xorwf	??_OpenTimer1+1,w,c
  1112  00189A  6EF2               	movwf	4082,c	;volatile
  1113                           
  1114                           ;func_audio.c: 112: INTCONbits.PEIE = (intEnable & 0x01u) | INTCONbits.PEIE;
  1115  00189C  ACF2               	btfss	4082,6,c	;volatile
  1116  00189E  D003               	goto	u20
  1117  0018A0  6A3E               	clrf	??_OpenTimer1& (0+255),c
  1118  0018A2  2A3E               	incf	??_OpenTimer1& (0+255),f,c
  1119  0018A4  D001               	goto	u28
  1120  0018A6                     u20:
  1121  0018A6  6A3E               	clrf	??_OpenTimer1& (0+255),c
  1122  0018A8                     u28:
  1123  0018A8  5040               	movf	OpenTimer1@intEnable,w,c
  1124  0018AA  0B01               	andlw	1
  1125  0018AC  103E               	iorwf	??_OpenTimer1,w,c
  1126  0018AE  6E3F               	movwf	(??_OpenTimer1+1)& (0+255),c
  1127  0018B0  3A3F               	swapf	??_OpenTimer1+1,f,c
  1128  0018B2  463F               	rlncf	??_OpenTimer1+1,f,c
  1129  0018B4  463F               	rlncf	??_OpenTimer1+1,f,c
  1130  0018B6  50F2               	movf	4082,w,c	;volatile
  1131  0018B8  183F               	xorwf	??_OpenTimer1+1,w,c
  1132  0018BA  0BBF               	andlw	-65
  1133  0018BC  183F               	xorwf	??_OpenTimer1+1,w,c
  1134  0018BE  6EF2               	movwf	4082,c	;volatile
  1135                           
  1136                           ;func_audio.c: 113: IPR1bits.TMR1IP = 0;
  1137  0018C0  909F               	bcf	3999,0,c	;volatile
  1138                           
  1139                           ;func_audio.c: 114: PIR1bits.TMR1IF = 0;
  1140  0018C2  909E               	bcf	3998,0,c	;volatile
  1141  0018C4  0012               	return		;funcret
  1142  0018C6                     __end_of_OpenTimer1:
  1143                           	opt callstack 0
  1144                           
  1145 ;; *************** function _fsm_cube *****************
  1146 ;; Defined at:
  1147 ;;		line 53 in file "fsm_cube.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1163 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1164 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    4
  1168 ;; This function calls:
  1169 ;;		_AUDIO_play
  1170 ;;		_AUDIO_stop
  1171 ;;		___awmod
  1172 ;;		___lwdiv
  1173 ;;		_abs
  1174 ;;		_buttonpressed
  1175 ;;		_checkbutton
  1176 ;;		_fire_led
  1177 ;;		_rand
  1178 ;;		_srand
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text7
  1185  001016                     __ptext7:
  1186                           	opt callstack 0
  1187  001016                     _fsm_cube:
  1188                           	opt callstack 26
  1189                           
  1190                           ;fsm_cube.c: 55: switch (current_state) {
  1191                           
  1192                           ;incstack = 0
  1193  001016  D36B               	goto	l2335
  1194  001018                     l65:
  1195                           
  1196                           ;fsm_cube.c: 57: if ((PORTCbits.RC1==1)&&(PORTCbits.RC2==1)){
  1197  001018  B282               	btfsc	3970,1,c	;volatile
  1198  00101A  A482               	btfss	3970,2,c	;volatile
  1199  00101C  D003               	goto	l66
  1200                           
  1201                           ;fsm_cube.c: 58: current_state = FSM_START1;
  1202  00101E  0E01               	movlw	1
  1203  001020  6E3C               	movwf	_current_state,c
  1204                           
  1205                           ;fsm_cube.c: 59: }
  1206  001022  0012               	return	
  1207  001024                     l66:
  1208                           
  1209                           ;fsm_cube.c: 60: else if((PORTCbits.RC6==1)&&(PORTCbits.RC7==1)){
  1210  001024  BC82               	btfsc	3970,6,c	;volatile
  1211  001026  AE82               	btfss	3970,7,c	;volatile
  1212  001028  D003               	goto	l68
  1213                           
  1214                           ;fsm_cube.c: 61: current_state = FSM_START2;
  1215  00102A  0E05               	movlw	5
  1216  00102C  6E3C               	movwf	_current_state,c
  1217                           
  1218                           ;fsm_cube.c: 62: }
  1219  00102E  0012               	return	
  1220  001030                     l68:
  1221                           
  1222                           ;fsm_cube.c: 63: else if((PORTBbits.RB0==1)&&(PORTBbits.RB1==1)){
  1223  001030  B081               	btfsc	3969,0,c	;volatile
  1224  001032  A281               	btfss	3969,1,c	;volatile
  1225  001034  D003               	goto	l1987
  1226                           
  1227                           ;fsm_cube.c: 64: current_state = FSM_START3;
  1228  001036  0E0A               	movlw	10
  1229  001038  6E3C               	movwf	_current_state,c
  1230                           
  1231                           ;fsm_cube.c: 65: }
  1232  00103A  0012               	return	
  1233  00103C                     l1987:
  1234                           
  1235                           ;fsm_cube.c: 66: else{;fsm_cube.c: 67: time++;
  1236  00103C  4A31               	infsnz	_time,f,c
  1237  00103E  2A32               	incf	_time+1,f,c
  1238                           
  1239                           ;fsm_cube.c: 68: AUDIO_play(start_melody[melody_index]);
  1240  001040  5037               	movf	_melody_index,w,c
  1241  001042  0D02               	mullw	2
  1242  001044  0E00               	movlw	low _start_melody
  1243  001046  24F3               	addwf	prodl,w,c
  1244  001048  6ED9               	movwf	fsr2l,c
  1245  00104A  0E01               	movlw	high _start_melody
  1246  00104C  20F4               	addwfc	prodh,w,c
  1247  00104E  6EDA               	movwf	fsr2h,c
  1248  001050  CFDE F03E          	movff	postinc2,AUDIO_play@freq
  1249  001054  CFDD F03F          	movff	postdec2,AUDIO_play@freq+1
  1250  001058  EC59  F00E         	call	_AUDIO_play	;wreg free
  1251                           
  1252                           ;fsm_cube.c: 69: if(time>=200){
  1253  00105C  5032               	movf	_time+1,w,c
  1254  00105E  E104               	bnz	u1410
  1255  001060  0EC8               	movlw	200
  1256  001062  5C31               	subwf	_time,w,c
  1257  001064  A0D8               	btfss	status,0,c
  1258  001066  0012               	return	
  1259  001068                     u1410:
  1260                           
  1261                           ;fsm_cube.c: 70: time=0;
  1262  001068  0E00               	movlw	0
  1263  00106A  6E32               	movwf	_time+1,c
  1264  00106C  0E00               	movlw	0
  1265  00106E  6E31               	movwf	_time,c
  1266                           
  1267                           ;fsm_cube.c: 71: melody_index++;
  1268  001070  2A37               	incf	_melody_index,f,c
  1269                           
  1270                           ;fsm_cube.c: 72: LATB = 0x00;
  1271  001072  0E00               	movlw	0
  1272  001074  6E8A               	movwf	3978,c	;volatile
  1273                           
  1274                           ;fsm_cube.c: 73: fire_led(led_switch);
  1275  001076  503B               	movf	_led_switch,w,c
  1276  001078  EC96  F00D         	call	_fire_led
  1277                           
  1278                           ;fsm_cube.c: 74: fire_led(led_switch+1);
  1279  00107C  283B               	incf	_led_switch,w,c
  1280  00107E  EC96  F00D         	call	_fire_led
  1281                           
  1282                           ;fsm_cube.c: 75: led_switch+=2;
  1283  001082  0E02               	movlw	2
  1284  001084  263B               	addwf	_led_switch,f,c
  1285                           
  1286                           ;fsm_cube.c: 76: if(led_switch>5){
  1287  001086  503B               	movf	_led_switch,w,c
  1288  001088  0A80               	xorlw	128
  1289  00108A  0F7A               	addlw	-134
  1290  00108C  A0D8               	btfss	status,0,c
  1291  00108E  D002               	goto	l2009
  1292                           
  1293                           ;fsm_cube.c: 77: led_switch=0;
  1294  001090  0E00               	movlw	0
  1295  001092  6E3B               	movwf	_led_switch,c
  1296  001094                     l2009:
  1297                           
  1298                           ;fsm_cube.c: 78: };fsm_cube.c: 79: if(melody_index==58){
  1299  001094  0E3A               	movlw	58
  1300  001096  1837               	xorwf	_melody_index,w,c
  1301  001098  A4D8               	btfss	status,2,c
  1302  00109A  0012               	return	
  1303                           
  1304                           ;fsm_cube.c: 80: melody_index = 0;
  1305  00109C  0E00               	movlw	0
  1306  00109E  6E37               	movwf	_melody_index,c
  1307  0010A0  0012               	return	
  1308  0010A2                     l2013:
  1309                           
  1310                           ;fsm_cube.c: 87: score = 0;
  1311  0010A2  0E00               	movlw	0
  1312  0010A4  6E2E               	movwf	_score+1,c
  1313  0010A6  0E00               	movlw	0
  1314  0010A8  6E2D               	movwf	_score,c
  1315                           
  1316                           ;fsm_cube.c: 88: game_time = 0;
  1317  0010AA  0E00               	movlw	0
  1318  0010AC  6E30               	movwf	_game_time+1,c
  1319  0010AE  0E00               	movlw	0
  1320  0010B0  6E2F               	movwf	_game_time,c
  1321                           
  1322                           ;fsm_cube.c: 89: wait_time = 3000;
  1323  0010B2  0E0B               	movlw	11
  1324  0010B4  6E28               	movwf	_wait_time+1,c
  1325  0010B6  0EB8               	movlw	184
  1326  0010B8  6E27               	movwf	_wait_time,c
  1327                           
  1328                           ;fsm_cube.c: 90: if(buttonpressed()==0){
  1329  0010BA  EC2C  F00E         	call	_buttonpressed	;wreg free
  1330  0010BE  0900               	iorlw	0
  1331  0010C0  A4D8               	btfss	status,2,c
  1332  0010C2  0012               	return	
  1333                           
  1334                           ;fsm_cube.c: 91: srand(time);
  1335  0010C4  C031  F03E         	movff	_time,srand@x
  1336  0010C8  C032  F03F         	movff	_time+1,srand@x+1
  1337  0010CC  EC61  F00E         	call	_srand	;wreg free
  1338  0010D0                     l2019:
  1339                           
  1340                           ;fsm_cube.c: 92: current_state = FSM_WAIT1;
  1341  0010D0  0E03               	movlw	3
  1342  0010D2  6E3C               	movwf	_current_state,c
  1343  0010D4  0012               	return	
  1344  0010D6                     l2021:
  1345                           
  1346                           ;fsm_cube.c: 96: fire_led(next_led);
  1347  0010D6  503A               	movf	_next_led,w,c
  1348  0010D8  EC96  F00D         	call	_fire_led
  1349                           
  1350                           ;fsm_cube.c: 97: AUDIO_play(all_notes[next_led]);
  1351  0010DC  503A               	movf	_next_led,w,c
  1352  0010DE  0D02               	mullw	2
  1353  0010E0  0E01               	movlw	low _all_notes
  1354  0010E2  24F3               	addwf	prodl,w,c
  1355  0010E4  6ED9               	movwf	fsr2l,c
  1356  0010E6  0E00               	movlw	high _all_notes
  1357  0010E8  20F4               	addwfc	prodh,w,c
  1358  0010EA  6EDA               	movwf	fsr2h,c
  1359  0010EC  CFDE F03E          	movff	postinc2,AUDIO_play@freq
  1360  0010F0  CFDD F03F          	movff	postdec2,AUDIO_play@freq+1
  1361  0010F4  EC59  F00E         	call	_AUDIO_play	;wreg free
  1362                           
  1363                           ;fsm_cube.c: 98: game_time++;
  1364  0010F8  4A2F               	infsnz	_game_time,f,c
  1365  0010FA  2A30               	incf	_game_time+1,f,c
  1366                           
  1367                           ;fsm_cube.c: 99: if(checkbutton()==next_led){
  1368  0010FC  C03A  F052         	movff	_next_led,??_fsm_cube
  1369  001100  6A53               	clrf	(??_fsm_cube+1)& (0+255),c
  1370  001102  BE52               	btfsc	??_fsm_cube& (0+255),7,c
  1371  001104  0653               	decf	(??_fsm_cube+1)& (0+255),f,c
  1372  001106  ECBB  F00D         	call	_checkbutton	;wreg free
  1373  00110A  6E54               	movwf	(??_fsm_cube+2)& (0+255),c
  1374  00110C  6A55               	clrf	(??_fsm_cube+3)& (0+255),c
  1375  00110E  5052               	movf	??_fsm_cube,w,c
  1376  001110  1854               	xorwf	??_fsm_cube+2,w,c
  1377  001112  E10B               	bnz	l2035
  1378  001114  5053               	movf	??_fsm_cube+1,w,c
  1379  001116  1855               	xorwf	??_fsm_cube+3,w,c
  1380  001118  A4D8               	btfss	status,2,c
  1381  00111A  D007               	goto	l2035
  1382                           
  1383                           ;fsm_cube.c: 100: score++;
  1384  00111C  4A2D               	infsnz	_score,f,c
  1385  00111E  2A2E               	incf	_score+1,f,c
  1386                           
  1387                           ;fsm_cube.c: 101: game_time = 0;
  1388  001120  0E00               	movlw	0
  1389  001122  6E30               	movwf	_game_time+1,c
  1390  001124  0E00               	movlw	0
  1391  001126  6E2F               	movwf	_game_time,c
  1392  001128  D7D3               	goto	l2019
  1393  00112A                     l2035:
  1394  00112A  5027               	movf	_wait_time,w,c
  1395  00112C  5C2F               	subwf	_game_time,w,c
  1396  00112E  5028               	movf	_wait_time+1,w,c
  1397  001130  5830               	subwfb	_game_time+1,w,c
  1398  001132  B0D8               	btfsc	status,0,c
  1399  001134  D005               	goto	u1470
  1400  001136  EC2C  F00E         	call	_buttonpressed	;wreg free
  1401  00113A  06E8               	decf	wreg,f,c
  1402  00113C  A4D8               	btfss	status,2,c
  1403  00113E  0012               	return	
  1404  001140                     u1470:
  1405                           
  1406                           ;fsm_cube.c: 104: game_time = 0;
  1407  001140  0E00               	movlw	0
  1408  001142  6E30               	movwf	_game_time+1,c
  1409  001144  0E00               	movlw	0
  1410  001146  6E2F               	movwf	_game_time,c
  1411                           
  1412                           ;fsm_cube.c: 105: current_state = FSM_DEAD1;
  1413  001148  0E04               	movlw	4
  1414  00114A  6E3C               	movwf	_current_state,c
  1415  00114C  0012               	return	
  1416  00114E                     l2041:
  1417                           
  1418                           ;fsm_cube.c: 109: AUDIO_stop();
  1419  00114E  EC68  F00E         	call	_AUDIO_stop	;wreg free
  1420                           
  1421                           ;fsm_cube.c: 110: LATB = 0x00;
  1422  001152  0E00               	movlw	0
  1423  001154  6E8A               	movwf	3978,c	;volatile
  1424                           
  1425                           ;fsm_cube.c: 111: game_time++;
  1426  001156  4A2F               	infsnz	_game_time,f,c
  1427  001158  2A30               	incf	_game_time+1,f,c
  1428                           
  1429                           ;fsm_cube.c: 112: if (game_time>=(wait_time/10))
  1430  00115A  C027  F03E         	movff	_wait_time,___lwdiv@dividend
  1431  00115E  C028  F03F         	movff	_wait_time+1,___lwdiv@dividend+1
  1432  001162  0E00               	movlw	0
  1433  001164  6E41               	movwf	___lwdiv@divisor+1,c
  1434  001166  0E0A               	movlw	10
  1435  001168  6E40               	movwf	___lwdiv@divisor,c
  1436  00116A  EC46  F00D         	call	___lwdiv	;wreg free
  1437  00116E  503E               	movf	?___lwdiv,w,c
  1438  001170  5C2F               	subwf	_game_time,w,c
  1439  001172  503F               	movf	?___lwdiv+1,w,c
  1440  001174  5830               	subwfb	_game_time+1,w,c
  1441  001176  A0D8               	btfss	status,0,c
  1442  001178  0012               	return	
  1443                           
  1444                           ;fsm_cube.c: 113: {;fsm_cube.c: 114: next_led = rand()%6;
  1445  00117A  EC1D  F00D         	call	_rand	;wreg free
  1446  00117E  C04A  F04C         	movff	?_rand,___awmod@dividend
  1447  001182  C04B  F04D         	movff	?_rand+1,___awmod@dividend+1
  1448  001186  0E00               	movlw	0
  1449  001188  6E4F               	movwf	___awmod@divisor+1,c
  1450  00118A  0E06               	movlw	6
  1451  00118C  6E4E               	movwf	___awmod@divisor,c
  1452  00118E  EC63  F00C         	call	___awmod	;wreg free
  1453  001192  504C               	movf	?___awmod,w,c
  1454  001194  6E3A               	movwf	_next_led,c
  1455                           
  1456                           ;fsm_cube.c: 115: wait_time -= 50;
  1457  001196  0E32               	movlw	50
  1458  001198  5E27               	subwf	_wait_time,f,c
  1459  00119A  0E00               	movlw	0
  1460  00119C  5A28               	subwfb	_wait_time+1,f,c
  1461                           
  1462                           ;fsm_cube.c: 116: if(wait_time==100){
  1463  00119E  0E64               	movlw	100
  1464  0011A0  1827               	xorwf	_wait_time,w,c
  1465  0011A2  1028               	iorwf	_wait_time+1,w,c
  1466  0011A4  A4D8               	btfss	status,2,c
  1467  0011A6  D004               	goto	l86
  1468                           
  1469                           ;fsm_cube.c: 117: wait_time=150;
  1470  0011A8  0E00               	movlw	0
  1471  0011AA  6E28               	movwf	_wait_time+1,c
  1472  0011AC  0E96               	movlw	150
  1473  0011AE  6E27               	movwf	_wait_time,c
  1474  0011B0                     l86:
  1475                           
  1476                           ;fsm_cube.c: 118: };fsm_cube.c: 119: game_time = 0;
  1477  0011B0  0E00               	movlw	0
  1478  0011B2  6E30               	movwf	_game_time+1,c
  1479  0011B4  0E00               	movlw	0
  1480  0011B6  6E2F               	movwf	_game_time,c
  1481                           
  1482                           ;fsm_cube.c: 120: current_state = FSM_BEEP1;
  1483  0011B8  0E02               	movlw	2
  1484  0011BA  6E3C               	movwf	_current_state,c
  1485  0011BC  0012               	return	
  1486  0011BE                     l2057:
  1487                           
  1488                           ;fsm_cube.c: 124: AUDIO_stop();
  1489  0011BE  EC68  F00E         	call	_AUDIO_stop	;wreg free
  1490                           
  1491                           ;fsm_cube.c: 125: game_time++;
  1492  0011C2  4A2F               	infsnz	_game_time,f,c
  1493  0011C4  2A30               	incf	_game_time+1,f,c
  1494                           
  1495                           ;fsm_cube.c: 126: if(score==0)
  1496  0011C6  502D               	movf	_score,w,c
  1497  0011C8  102E               	iorwf	_score+1,w,c
  1498  0011CA  A4D8               	btfss	status,2,c
  1499  0011CC  D006               	goto	l2065
  1500                           
  1501                           ;fsm_cube.c: 127: {;fsm_cube.c: 128: time=0;
  1502  0011CE  0E00               	movlw	0
  1503  0011D0  6E32               	movwf	_time+1,c
  1504  0011D2  0E00               	movlw	0
  1505  0011D4  6E31               	movwf	_time,c
  1506                           
  1507                           ;fsm_cube.c: 129: current_state = FSM_ASKING;
  1508  0011D6  0E00               	movlw	0
  1509  0011D8  6E3C               	movwf	_current_state,c
  1510  0011DA                     l2065:
  1511                           
  1512                           ;fsm_cube.c: 130: };fsm_cube.c: 131: if(game_time==400){
  1513  0011DA  0E90               	movlw	144
  1514  0011DC  182F               	xorwf	_game_time,w,c
  1515  0011DE  E105               	bnz	l2069
  1516  0011E0  0430               	decf	_game_time+1,w,c
  1517  0011E2  A4D8               	btfss	status,2,c
  1518  0011E4  D002               	goto	l2069
  1519                           
  1520                           ;fsm_cube.c: 132: LATB=0xFC;
  1521  0011E6  0EFC               	movlw	252
  1522  0011E8  6E8A               	movwf	3978,c	;volatile
  1523  0011EA                     l2069:
  1524                           
  1525                           ;fsm_cube.c: 133: };fsm_cube.c: 134: if(game_time==700){
  1526  0011EA  0EBC               	movlw	188
  1527  0011EC  182F               	xorwf	_game_time,w,c
  1528  0011EE  E103               	bnz	u1521
  1529  0011F0  0E02               	movlw	2
  1530  0011F2  1830               	xorwf	_game_time+1,w,c
  1531  0011F4  A4D8               	btfss	status,2,c
  1532  0011F6                     u1521:
  1533  0011F6  0012               	return	
  1534                           
  1535                           ;fsm_cube.c: 135: score--;
  1536  0011F8  062D               	decf	_score,f,c
  1537  0011FA  A0D8               	btfss	status,0,c
  1538  0011FC  062E               	decf	_score+1,f,c
  1539  0011FE                     l2073:
  1540                           
  1541                           ;fsm_cube.c: 136: game_time = 0;
  1542  0011FE  0E00               	movlw	0
  1543  001200  6E30               	movwf	_game_time+1,c
  1544  001202  0E00               	movlw	0
  1545  001204  6E2F               	movwf	_game_time,c
  1546  001206                     l2075:
  1547                           
  1548                           ;fsm_cube.c: 137: LATB=0x00;
  1549  001206  0E00               	movlw	0
  1550  001208  6E8A               	movwf	3978,c	;volatile
  1551  00120A  0012               	return	
  1552  00120C                     l2077:
  1553                           
  1554                           ;fsm_cube.c: 142: AUDIO_stop();
  1555  00120C  EC68  F00E         	call	_AUDIO_stop	;wreg free
  1556                           
  1557                           ;fsm_cube.c: 143: loser=-1;
  1558  001210  6838               	setf	_loser,c
  1559                           
  1560                           ;fsm_cube.c: 144: game_time=0;
  1561  001212  0E00               	movlw	0
  1562  001214  6E30               	movwf	_game_time+1,c
  1563  001216  0E00               	movlw	0
  1564  001218  6E2F               	movwf	_game_time,c
  1565                           
  1566                           ;fsm_cube.c: 145: status=0;
  1567  00121A  0E00               	movlw	0
  1568  00121C  6E39               	movwf	_status,c
  1569                           
  1570                           ;fsm_cube.c: 146: melody_index = 0;
  1571  00121E  0E00               	movlw	0
  1572  001220  6E37               	movwf	_melody_index,c
  1573                           
  1574                           ;fsm_cube.c: 147: current_state = FSM_WAIT2;
  1575  001222  0E06               	movlw	6
  1576  001224  6E3C               	movwf	_current_state,c
  1577                           
  1578                           ;fsm_cube.c: 148: break;
  1579  001226  0012               	return	
  1580  001228                     l2089:
  1581                           
  1582                           ;fsm_cube.c: 150: game_time++;
  1583  001228  4A2F               	infsnz	_game_time,f,c
  1584  00122A  2A30               	incf	_game_time+1,f,c
  1585                           
  1586                           ;fsm_cube.c: 151: if (status==0){
  1587  00122C  5039               	movf	_status,w,c
  1588  00122E  A4D8               	btfss	status,2,c
  1589  001230  D003               	goto	l2095
  1590                           
  1591                           ;fsm_cube.c: 152: LATB = 0x00;
  1592  001232  0E00               	movlw	0
  1593  001234  6E8A               	movwf	3978,c	;volatile
  1594                           
  1595                           ;fsm_cube.c: 153: }else
  1596  001236  D00C               	goto	l2097
  1597  001238                     l2095:
  1598                           
  1599                           ;fsm_cube.c: 154: {;fsm_cube.c: 155: fire_led(0);
  1600  001238  0E00               	movlw	0
  1601  00123A  EC96  F00D         	call	_fire_led
  1602                           
  1603                           ;fsm_cube.c: 156: fire_led(1);
  1604  00123E  0E01               	movlw	1
  1605  001240  EC96  F00D         	call	_fire_led
  1606                           
  1607                           ;fsm_cube.c: 157: fire_led(2);
  1608  001244  0E02               	movlw	2
  1609  001246  EC96  F00D         	call	_fire_led
  1610                           
  1611                           ;fsm_cube.c: 158: fire_led(3);
  1612  00124A  0E03               	movlw	3
  1613  00124C  EC96  F00D         	call	_fire_led
  1614  001250                     l2097:
  1615                           
  1616                           ;fsm_cube.c: 159: };fsm_cube.c: 160: if (game_time==500){
  1617  001250  0EF4               	movlw	244
  1618  001252  182F               	xorwf	_game_time,w,c
  1619  001254  E111               	bnz	l2103
  1620  001256  0430               	decf	_game_time+1,w,c
  1621  001258  A4D8               	btfss	status,2,c
  1622  00125A  D00E               	goto	l2103
  1623                           
  1624                           ;fsm_cube.c: 161: game_time=0;
  1625  00125C  0E00               	movlw	0
  1626  00125E  6E30               	movwf	_game_time+1,c
  1627  001260  0E00               	movlw	0
  1628  001262  6E2F               	movwf	_game_time,c
  1629                           
  1630                           ;fsm_cube.c: 162: status = abs(status-1);
  1631  001264  0EFF               	movlw	255
  1632  001266  2439               	addwf	_status,w,c
  1633  001268  6E3E               	movwf	abs@a,c
  1634  00126A  6A3F               	clrf	abs@a+1,c
  1635  00126C  0EFF               	movlw	255
  1636  00126E  223F               	addwfc	abs@a+1,f,c
  1637  001270  EC07  F00E         	call	_abs	;wreg free
  1638  001274  503E               	movf	?_abs,w,c
  1639  001276  6E39               	movwf	_status,c
  1640  001278                     l2103:
  1641                           
  1642                           ;fsm_cube.c: 163: };fsm_cube.c: 164: if((PORTCbits.RC1==1)&&(PORTCbits.RC2==1)&&(PORTCbi
      +                          ts.RC6==1)&&(PORTCbits.RC7==1)&&(PORTBbits.RB0==0)&&(PORTBbits.RB1==0))
  1643  001278  A282               	btfss	3970,1,c	;volatile
  1644  00127A  0012               	return	
  1645  00127C  A482               	btfss	3970,2,c	;volatile
  1646  00127E  0012               	return	
  1647  001280  AC82               	btfss	3970,6,c	;volatile
  1648  001282  0012               	return	
  1649  001284  AE82               	btfss	3970,7,c	;volatile
  1650  001286  0012               	return	
  1651  001288  B081               	btfsc	3969,0,c	;volatile
  1652  00128A  0012               	return	
  1653  00128C  B281               	btfsc	3969,1,c	;volatile
  1654  00128E  0012               	return	
  1655                           
  1656                           ;fsm_cube.c: 165: {;fsm_cube.c: 166: game_time=0;
  1657  001290  0E00               	movlw	0
  1658  001292  6E30               	movwf	_game_time+1,c
  1659  001294  0E00               	movlw	0
  1660  001296  6E2F               	movwf	_game_time,c
  1661                           
  1662                           ;fsm_cube.c: 167: current_state = FSM_COUNT2;
  1663  001298  0E07               	movlw	7
  1664  00129A  6E3C               	movwf	_current_state,c
  1665                           
  1666                           ;fsm_cube.c: 168: count=10+rand()%5;
  1667  00129C  EC1D  F00D         	call	_rand	;wreg free
  1668  0012A0  C04A  F04C         	movff	?_rand,___awmod@dividend
  1669  0012A4  C04B  F04D         	movff	?_rand+1,___awmod@dividend+1
  1670  0012A8  0E00               	movlw	0
  1671  0012AA  6E4F               	movwf	___awmod@divisor+1,c
  1672  0012AC  0E05               	movlw	5
  1673  0012AE  6E4E               	movwf	___awmod@divisor,c
  1674  0012B0  EC63  F00C         	call	___awmod	;wreg free
  1675  0012B4  0E0A               	movlw	10
  1676  0012B6  244C               	addwf	?___awmod,w,c
  1677  0012B8  6E2B               	movwf	_count,c
  1678  0012BA  0E00               	movlw	0
  1679  0012BC  204D               	addwfc	?___awmod+1,w,c
  1680  0012BE  6E2C               	movwf	_count+1,c
  1681  0012C0  0012               	return	
  1682  0012C2                     l2119:
  1683                           
  1684                           ;fsm_cube.c: 172: game_time++;
  1685  0012C2  4A2F               	infsnz	_game_time,f,c
  1686  0012C4  2A30               	incf	_game_time+1,f,c
  1687                           
  1688                           ;fsm_cube.c: 173: if (game_time==800){
  1689  0012C6  0E20               	movlw	32
  1690  0012C8  182F               	xorwf	_game_time,w,c
  1691  0012CA  E115               	bnz	l2129
  1692  0012CC  0E03               	movlw	3
  1693  0012CE  1830               	xorwf	_game_time+1,w,c
  1694  0012D0  A4D8               	btfss	status,2,c
  1695  0012D2  D011               	goto	l2129
  1696                           
  1697                           ;fsm_cube.c: 174: count--;
  1698  0012D4  062B               	decf	_count,f,c
  1699  0012D6  A0D8               	btfss	status,0,c
  1700  0012D8  062C               	decf	_count+1,f,c
  1701                           
  1702                           ;fsm_cube.c: 175: status = abs(status-1);
  1703  0012DA  0EFF               	movlw	255
  1704  0012DC  2439               	addwf	_status,w,c
  1705  0012DE  6E3E               	movwf	abs@a,c
  1706  0012E0  6A3F               	clrf	abs@a+1,c
  1707  0012E2  0EFF               	movlw	255
  1708  0012E4  223F               	addwfc	abs@a+1,f,c
  1709  0012E6  EC07  F00E         	call	_abs	;wreg free
  1710  0012EA  503E               	movf	?_abs,w,c
  1711  0012EC  6E39               	movwf	_status,c
  1712                           
  1713                           ;fsm_cube.c: 176: game_time=0;
  1714  0012EE  0E00               	movlw	0
  1715  0012F0  6E30               	movwf	_game_time+1,c
  1716  0012F2  0E00               	movlw	0
  1717  0012F4  6E2F               	movwf	_game_time,c
  1718  0012F6                     l2129:
  1719                           
  1720                           ;fsm_cube.c: 177: };fsm_cube.c: 179: if(status ==1){
  1721  0012F6  0439               	decf	_status,w,c
  1722  0012F8  A4D8               	btfss	status,2,c
  1723  0012FA  D00D               	goto	l2137
  1724                           
  1725                           ;fsm_cube.c: 180: AUDIO_play(58044);
  1726  0012FC  0EE2               	movlw	226
  1727  0012FE  6E3F               	movwf	AUDIO_play@freq+1,c
  1728  001300  0EBC               	movlw	188
  1729  001302  6E3E               	movwf	AUDIO_play@freq,c
  1730  001304  EC59  F00E         	call	_AUDIO_play	;wreg free
  1731                           
  1732                           ;fsm_cube.c: 181: fire_led(4);
  1733  001308  0E04               	movlw	4
  1734  00130A  EC96  F00D         	call	_fire_led
  1735                           
  1736                           ;fsm_cube.c: 182: fire_led(5);
  1737  00130E  0E05               	movlw	5
  1738  001310  EC96  F00D         	call	_fire_led
  1739                           
  1740                           ;fsm_cube.c: 183: }else{
  1741  001314  D004               	goto	l2141
  1742  001316                     l2137:
  1743                           
  1744                           ;fsm_cube.c: 184: AUDIO_stop();
  1745  001316  EC68  F00E         	call	_AUDIO_stop	;wreg free
  1746                           
  1747                           ;fsm_cube.c: 185: LATB=0x00;
  1748  00131A  0E00               	movlw	0
  1749  00131C  6E8A               	movwf	3978,c	;volatile
  1750  00131E                     l2141:
  1751                           
  1752                           ;fsm_cube.c: 186: };fsm_cube.c: 187: if(PORTCbits.RC2==0)
  1753  00131E  B482               	btfsc	3970,2,c	;volatile
  1754  001320  D006               	goto	l101
  1755                           
  1756                           ;fsm_cube.c: 188: {;fsm_cube.c: 189: game_time=0;
  1757  001322  0E00               	movlw	0
  1758  001324  6E30               	movwf	_game_time+1,c
  1759  001326  0E00               	movlw	0
  1760  001328  6E2F               	movwf	_game_time,c
  1761                           
  1762                           ;fsm_cube.c: 190: loser = 0;
  1763  00132A  0E00               	movlw	0
  1764  00132C  D017               	goto	L4
  1765  00132E                     l101:
  1766  00132E  B282               	btfsc	3970,1,c	;volatile
  1767  001330  D006               	goto	l103
  1768                           
  1769                           ;fsm_cube.c: 193: {;fsm_cube.c: 194: game_time=0;
  1770  001332  0E00               	movlw	0
  1771  001334  6E30               	movwf	_game_time+1,c
  1772  001336  0E00               	movlw	0
  1773  001338  6E2F               	movwf	_game_time,c
  1774                           
  1775                           ;fsm_cube.c: 195: loser = 1;
  1776  00133A  0E01               	movlw	1
  1777  00133C  D00F               	goto	L4
  1778  00133E                     l103:
  1779  00133E  BC82               	btfsc	3970,6,c	;volatile
  1780  001340  D006               	goto	l105
  1781                           
  1782                           ;fsm_cube.c: 198: {;fsm_cube.c: 199: game_time=0;
  1783  001342  0E00               	movlw	0
  1784  001344  6E30               	movwf	_game_time+1,c
  1785  001346  0E00               	movlw	0
  1786  001348  6E2F               	movwf	_game_time,c
  1787                           
  1788                           ;fsm_cube.c: 200: loser = 2;
  1789  00134A  0E02               	movlw	2
  1790  00134C  D007               	goto	L4
  1791  00134E                     l105:
  1792  00134E  BE82               	btfsc	3970,7,c	;volatile
  1793  001350  D008               	goto	l104
  1794                           
  1795                           ;fsm_cube.c: 203: {;fsm_cube.c: 204: game_time=0;
  1796  001352  0E00               	movlw	0
  1797  001354  6E30               	movwf	_game_time+1,c
  1798  001356  0E00               	movlw	0
  1799  001358  6E2F               	movwf	_game_time,c
  1800                           
  1801                           ;fsm_cube.c: 205: loser = 3;
  1802  00135A  0E03               	movlw	3
  1803  00135C                     L4:
  1804  00135C  6E38               	movwf	_loser,c
  1805                           
  1806                           ;fsm_cube.c: 206: current_state = FSM_DEAD2;
  1807  00135E  0E09               	movlw	9
  1808  001360  6E3C               	movwf	_current_state,c
  1809  001362                     l104:
  1810                           
  1811                           ;fsm_cube.c: 207: };fsm_cube.c: 208: if(count==0){
  1812  001362  502B               	movf	_count,w,c
  1813  001364  102C               	iorwf	_count+1,w,c
  1814  001366  A4D8               	btfss	status,2,c
  1815  001368  0012               	return	
  1816                           
  1817                           ;fsm_cube.c: 209: game_time = 0;
  1818  00136A  0E00               	movlw	0
  1819  00136C  6E30               	movwf	_game_time+1,c
  1820  00136E  0E00               	movlw	0
  1821  001370  6E2F               	movwf	_game_time,c
  1822                           
  1823                           ;fsm_cube.c: 210: current_state = FSM_ALARM2;
  1824  001372  0E08               	movlw	8
  1825  001374  6E3C               	movwf	_current_state,c
  1826  001376  0012               	return	
  1827  001378                     l2155:
  1828                           
  1829                           ;fsm_cube.c: 214: game_time++;
  1830  001378  4A2F               	infsnz	_game_time,f,c
  1831  00137A  2A30               	incf	_game_time+1,f,c
  1832                           
  1833                           ;fsm_cube.c: 215: if (game_time==100){
  1834  00137C  0E64               	movlw	100
  1835  00137E  182F               	xorwf	_game_time,w,c
  1836  001380  1030               	iorwf	_game_time+1,w,c
  1837  001382  A4D8               	btfss	status,2,c
  1838  001384  D00E               	goto	l2163
  1839                           
  1840                           ;fsm_cube.c: 216: status = abs(status-1);
  1841  001386  0EFF               	movlw	255
  1842  001388  2439               	addwf	_status,w,c
  1843  00138A  6E3E               	movwf	abs@a,c
  1844  00138C  6A3F               	clrf	abs@a+1,c
  1845  00138E  0EFF               	movlw	255
  1846  001390  223F               	addwfc	abs@a+1,f,c
  1847  001392  EC07  F00E         	call	_abs	;wreg free
  1848  001396  503E               	movf	?_abs,w,c
  1849  001398  6E39               	movwf	_status,c
  1850                           
  1851                           ;fsm_cube.c: 217: game_time = 0;
  1852  00139A  0E00               	movlw	0
  1853  00139C  6E30               	movwf	_game_time+1,c
  1854  00139E  0E00               	movlw	0
  1855  0013A0  6E2F               	movwf	_game_time,c
  1856  0013A2                     l2163:
  1857                           
  1858                           ;fsm_cube.c: 218: };fsm_cube.c: 219: if(status == 1){
  1859  0013A2  0439               	decf	_status,w,c
  1860  0013A4  A4D8               	btfss	status,2,c
  1861  0013A6  D009               	goto	l2169
  1862                           
  1863                           ;fsm_cube.c: 220: AUDIO_play(58044);
  1864  0013A8  0EE2               	movlw	226
  1865  0013AA  6E3F               	movwf	AUDIO_play@freq+1,c
  1866  0013AC  0EBC               	movlw	188
  1867  0013AE  6E3E               	movwf	AUDIO_play@freq,c
  1868  0013B0  EC59  F00E         	call	_AUDIO_play	;wreg free
  1869                           
  1870                           ;fsm_cube.c: 221: LATB = 0x00;
  1871  0013B4  0E00               	movlw	0
  1872  0013B6  6E8A               	movwf	3978,c	;volatile
  1873                           
  1874                           ;fsm_cube.c: 222: }else{
  1875  0013B8  D008               	goto	l2173
  1876  0013BA                     l2169:
  1877                           
  1878                           ;fsm_cube.c: 223: LATB = 0xFC;
  1879  0013BA  0EFC               	movlw	252
  1880  0013BC  6E8A               	movwf	3978,c	;volatile
  1881                           
  1882                           ;fsm_cube.c: 224: AUDIO_play(35105);
  1883  0013BE  0E89               	movlw	137
  1884  0013C0  6E3F               	movwf	AUDIO_play@freq+1,c
  1885  0013C2  0E21               	movlw	33
  1886  0013C4  6E3E               	movwf	AUDIO_play@freq,c
  1887  0013C6  EC59  F00E         	call	_AUDIO_play	;wreg free
  1888  0013CA                     l2173:
  1889                           
  1890                           ;fsm_cube.c: 225: };fsm_cube.c: 226: if((PORTCbits.RC2==0)&&(PORTCbits.RC1==0)&&(PORTCbi
      +                          ts.RC6==0)&&(PORTCbits.RC7==1)){
  1891  0013CA  A482               	btfss	3970,2,c	;volatile
  1892  0013CC  B282               	btfsc	3970,1,c	;volatile
  1893  0013CE  D00E               	goto	l113
  1894  0013D0  AC82               	btfss	3970,6,c	;volatile
  1895  0013D2  AE82               	btfss	3970,7,c	;volatile
  1896  0013D4  D00B               	goto	l113
  1897                           
  1898                           ;fsm_cube.c: 227: melody_index=0;
  1899  0013D6  0E00               	movlw	0
  1900  0013D8  6E37               	movwf	_melody_index,c
  1901                           
  1902                           ;fsm_cube.c: 228: game_time = 0;
  1903  0013DA  0E00               	movlw	0
  1904  0013DC  6E30               	movwf	_game_time+1,c
  1905  0013DE  0E00               	movlw	0
  1906  0013E0  6E2F               	movwf	_game_time,c
  1907                           
  1908                           ;fsm_cube.c: 229: loser = 3;
  1909  0013E2  0E03               	movlw	3
  1910  0013E4  6E38               	movwf	_loser,c
  1911                           
  1912                           ;fsm_cube.c: 230: current_state = FSM_DEAD2;
  1913  0013E6  0E09               	movlw	9
  1914  0013E8  6E3C               	movwf	_current_state,c
  1915                           
  1916                           ;fsm_cube.c: 231: }else if((PORTCbits.RC2==0)&&(PORTCbits.RC1==0)&&(PORTCbits.RC6==1)&&(
      +                          PORTCbits.RC7==0)){
  1917  0013EA  0012               	return	
  1918  0013EC                     l113:
  1919  0013EC  A482               	btfss	3970,2,c	;volatile
  1920  0013EE  B282               	btfsc	3970,1,c	;volatile
  1921  0013F0  D00E               	goto	l115
  1922  0013F2  BC82               	btfsc	3970,6,c	;volatile
  1923  0013F4  BE82               	btfsc	3970,7,c	;volatile
  1924  0013F6  D00B               	goto	l115
  1925                           
  1926                           ;fsm_cube.c: 232: melody_index=0;
  1927  0013F8  0E00               	movlw	0
  1928  0013FA  6E37               	movwf	_melody_index,c
  1929                           
  1930                           ;fsm_cube.c: 233: game_time = 0;
  1931  0013FC  0E00               	movlw	0
  1932  0013FE  6E30               	movwf	_game_time+1,c
  1933  001400  0E00               	movlw	0
  1934  001402  6E2F               	movwf	_game_time,c
  1935                           
  1936                           ;fsm_cube.c: 234: loser = 2;
  1937  001404  0E02               	movlw	2
  1938  001406  6E38               	movwf	_loser,c
  1939                           
  1940                           ;fsm_cube.c: 235: current_state = FSM_DEAD2;
  1941  001408  0E09               	movlw	9
  1942  00140A  6E3C               	movwf	_current_state,c
  1943                           
  1944                           ;fsm_cube.c: 236: }else if((PORTCbits.RC2==0)&&(PORTCbits.RC1==1)&&(PORTCbits.RC6==0)&&(
      +                          PORTCbits.RC7==0)){
  1945  00140C  0012               	return	
  1946  00140E                     l115:
  1947  00140E  A482               	btfss	3970,2,c	;volatile
  1948  001410  A282               	btfss	3970,1,c	;volatile
  1949  001412  D00E               	goto	l117
  1950  001414  AC82               	btfss	3970,6,c	;volatile
  1951  001416  BE82               	btfsc	3970,7,c	;volatile
  1952  001418  D00B               	goto	l117
  1953                           
  1954                           ;fsm_cube.c: 237: melody_index=0;
  1955  00141A  0E00               	movlw	0
  1956  00141C  6E37               	movwf	_melody_index,c
  1957                           
  1958                           ;fsm_cube.c: 238: game_time = 0;
  1959  00141E  0E00               	movlw	0
  1960  001420  6E30               	movwf	_game_time+1,c
  1961  001422  0E00               	movlw	0
  1962  001424  6E2F               	movwf	_game_time,c
  1963                           
  1964                           ;fsm_cube.c: 239: loser = 1;
  1965  001426  0E01               	movlw	1
  1966  001428  6E38               	movwf	_loser,c
  1967                           
  1968                           ;fsm_cube.c: 240: current_state = FSM_DEAD2;
  1969  00142A  0E09               	movlw	9
  1970  00142C  6E3C               	movwf	_current_state,c
  1971                           
  1972                           ;fsm_cube.c: 241: }else if((PORTCbits.RC2==1)&&(PORTCbits.RC1==0)&&(PORTCbits.RC6==0)&&(
      +                          PORTCbits.RC7==0)){
  1973  00142E  0012               	return	
  1974  001430                     l117:
  1975  001430  A482               	btfss	3970,2,c	;volatile
  1976  001432  0012               	return	
  1977  001434  B282               	btfsc	3970,1,c	;volatile
  1978  001436  0012               	return	
  1979  001438  BC82               	btfsc	3970,6,c	;volatile
  1980  00143A  0012               	return	
  1981  00143C  BE82               	btfsc	3970,7,c	;volatile
  1982  00143E  0012               	return	
  1983                           
  1984                           ;fsm_cube.c: 242: melody_index=0;
  1985  001440  0E00               	movlw	0
  1986  001442  6E37               	movwf	_melody_index,c
  1987                           
  1988                           ;fsm_cube.c: 243: game_time = 0;
  1989  001444  0E00               	movlw	0
  1990  001446  6E30               	movwf	_game_time+1,c
  1991  001448  0E00               	movlw	0
  1992  00144A  6E2F               	movwf	_game_time,c
  1993                           
  1994                           ;fsm_cube.c: 244: loser = 0;
  1995  00144C  0E00               	movlw	0
  1996  00144E  6E38               	movwf	_loser,c
  1997                           
  1998                           ;fsm_cube.c: 245: current_state = FSM_DEAD2;
  1999  001450  0E09               	movlw	9
  2000  001452  6E3C               	movwf	_current_state,c
  2001  001454  0012               	return	
  2002  001456                     l2207:
  2003                           
  2004                           ;fsm_cube.c: 249: game_time++;
  2005  001456  4A2F               	infsnz	_game_time,f,c
  2006  001458  2A30               	incf	_game_time+1,f,c
  2007                           
  2008                           ;fsm_cube.c: 250: AUDIO_play(loser_melody[melody_index]);
  2009  00145A  5037               	movf	_melody_index,w,c
  2010  00145C  0D02               	mullw	2
  2011  00145E  0E60               	movlw	low _loser_melody
  2012  001460  24F3               	addwf	prodl,w,c
  2013  001462  6ED9               	movwf	fsr2l,c
  2014  001464  0E00               	movlw	high _loser_melody
  2015  001466  20F4               	addwfc	prodh,w,c
  2016  001468  6EDA               	movwf	fsr2h,c
  2017  00146A  CFDE F03E          	movff	postinc2,AUDIO_play@freq
  2018  00146E  CFDD F03F          	movff	postdec2,AUDIO_play@freq+1
  2019  001472  EC59  F00E         	call	_AUDIO_play	;wreg free
  2020                           
  2021                           ;fsm_cube.c: 251: if(game_time==100){
  2022  001476  0E64               	movlw	100
  2023  001478  182F               	xorwf	_game_time,w,c
  2024  00147A  1030               	iorwf	_game_time+1,w,c
  2025  00147C  A4D8               	btfss	status,2,c
  2026  00147E  D01B               	goto	l121
  2027                           
  2028                           ;fsm_cube.c: 252: game_time = 0;
  2029  001480  0E00               	movlw	0
  2030  001482  6E30               	movwf	_game_time+1,c
  2031  001484  0E00               	movlw	0
  2032  001486  6E2F               	movwf	_game_time,c
  2033                           
  2034                           ;fsm_cube.c: 253: status = abs(status-1);
  2035  001488  0EFF               	movlw	255
  2036  00148A  2439               	addwf	_status,w,c
  2037  00148C  6E3E               	movwf	abs@a,c
  2038  00148E  6A3F               	clrf	abs@a+1,c
  2039  001490  0EFF               	movlw	255
  2040  001492  223F               	addwfc	abs@a+1,f,c
  2041  001494  EC07  F00E         	call	_abs	;wreg free
  2042  001498  503E               	movf	?_abs,w,c
  2043  00149A  6E39               	movwf	_status,c
  2044                           
  2045                           ;fsm_cube.c: 254: melody_index++;
  2046  00149C  2A37               	incf	_melody_index,f,c
  2047                           
  2048                           ;fsm_cube.c: 255: if(melody_index==45){
  2049  00149E  0E2D               	movlw	45
  2050  0014A0  1837               	xorwf	_melody_index,w,c
  2051  0014A2  A4D8               	btfss	status,2,c
  2052  0014A4  D008               	goto	l121
  2053                           
  2054                           ;fsm_cube.c: 256: time = 0;
  2055  0014A6  0E00               	movlw	0
  2056  0014A8  6E32               	movwf	_time+1,c
  2057  0014AA  0E00               	movlw	0
  2058  0014AC  6E31               	movwf	_time,c
  2059                           
  2060                           ;fsm_cube.c: 257: melody_index = 0;
  2061  0014AE  0E00               	movlw	0
  2062  0014B0  6E37               	movwf	_melody_index,c
  2063                           
  2064                           ;fsm_cube.c: 258: current_state = FSM_ASKING;
  2065  0014B2  0E00               	movlw	0
  2066  0014B4  6E3C               	movwf	_current_state,c
  2067  0014B6                     l121:
  2068                           
  2069                           ;fsm_cube.c: 259: };fsm_cube.c: 260: };fsm_cube.c: 261: if(status==0){
  2070  0014B6  5039               	movf	_status,w,c
  2071  0014B8  A4D8               	btfss	status,2,c
  2072  0014BA  D6A5               	goto	l2075
  2073                           
  2074                           ;fsm_cube.c: 262: fire_led(loser);
  2075  0014BC  5038               	movf	_loser,w,c
  2076  0014BE  EC96  F00D         	call	_fire_led
  2077                           
  2078                           ;fsm_cube.c: 263: }else{
  2079  0014C2  0012               	return	
  2080  0014C4                     l2227:
  2081                           
  2082                           ;fsm_cube.c: 269: AUDIO_stop();
  2083  0014C4  EC68  F00E         	call	_AUDIO_stop	;wreg free
  2084                           
  2085                           ;fsm_cube.c: 270: game_time=0;
  2086  0014C8  0E00               	movlw	0
  2087  0014CA  6E30               	movwf	_game_time+1,c
  2088  0014CC  0E00               	movlw	0
  2089  0014CE  6E2F               	movwf	_game_time,c
  2090                           
  2091                           ;fsm_cube.c: 271: count=0;
  2092  0014D0  0E00               	movlw	0
  2093  0014D2  6E2C               	movwf	_count+1,c
  2094  0014D4  0E00               	movlw	0
  2095  0014D6  6E2B               	movwf	_count,c
  2096                           
  2097                           ;fsm_cube.c: 272: game_lenght=1;
  2098  0014D8  0E00               	movlw	0
  2099  0014DA  6E2A               	movwf	_game_lenght+1,c
  2100  0014DC  0E01               	movlw	1
  2101  0014DE  6E29               	movwf	_game_lenght,c
  2102                           
  2103                           ;fsm_cube.c: 273: if(buttonpressed()==0){
  2104  0014E0  EC2C  F00E         	call	_buttonpressed	;wreg free
  2105  0014E4  0900               	iorlw	0
  2106  0014E6  A4D8               	btfss	status,2,c
  2107  0014E8  0012               	return	
  2108                           
  2109                           ;fsm_cube.c: 274: srand(time);
  2110  0014EA  C031  F03E         	movff	_time,srand@x
  2111  0014EE  C032  F03F         	movff	_time+1,srand@x+1
  2112  0014F2  EC61  F00E         	call	_srand	;wreg free
  2113  0014F6                     l2239:
  2114                           
  2115                           ;fsm_cube.c: 275: current_state = FSM_SEQ_OFF3;
  2116  0014F6  0E0C               	movlw	12
  2117  0014F8  6E3C               	movwf	_current_state,c
  2118  0014FA  0012               	return	
  2119  0014FC                     l2241:
  2120                           
  2121                           ;fsm_cube.c: 279: game_time++;
  2122  0014FC  4A2F               	infsnz	_game_time,f,c
  2123  0014FE  2A30               	incf	_game_time+1,f,c
  2124                           
  2125                           ;fsm_cube.c: 280: LATB=0x00;
  2126  001500  0E00               	movlw	0
  2127  001502  6E8A               	movwf	3978,c	;volatile
  2128                           
  2129                           ;fsm_cube.c: 281: AUDIO_stop();
  2130  001504  EC68  F00E         	call	_AUDIO_stop	;wreg free
  2131                           
  2132                           ;fsm_cube.c: 282: if(game_time==500){
  2133  001508  0EF4               	movlw	244
  2134  00150A  182F               	xorwf	_game_time,w,c
  2135  00150C  E102               	bnz	u1901
  2136  00150E  0430               	decf	_game_time+1,w,c
  2137  001510  A4D8               	btfss	status,2,c
  2138  001512                     u1901:
  2139  001512  0012               	return	
  2140                           
  2141                           ;fsm_cube.c: 283: game_time = 0;
  2142  001514  0E00               	movlw	0
  2143  001516  6E30               	movwf	_game_time+1,c
  2144  001518  0E00               	movlw	0
  2145  00151A  6E2F               	movwf	_game_time,c
  2146                           
  2147                           ;fsm_cube.c: 284: game3seq[count]=rand()%6;
  2148  00151C  0E00               	movlw	low _game3seq
  2149  00151E  242B               	addwf	_count,w,c
  2150  001520  6ED9               	movwf	fsr2l,c
  2151  001522  0E02               	movlw	high _game3seq
  2152  001524  202C               	addwfc	_count+1,w,c
  2153  001526  6EDA               	movwf	fsr2h,c
  2154  001528  EC1D  F00D         	call	_rand	;wreg free
  2155  00152C  C04A  F04C         	movff	?_rand,___awmod@dividend
  2156  001530  C04B  F04D         	movff	?_rand+1,___awmod@dividend+1
  2157  001534  0E00               	movlw	0
  2158  001536  6E4F               	movwf	___awmod@divisor+1,c
  2159  001538  0E06               	movlw	6
  2160  00153A  6E4E               	movwf	___awmod@divisor,c
  2161  00153C  EC63  F00C         	call	___awmod	;wreg free
  2162  001540  504C               	movf	?___awmod,w,c
  2163  001542  6EDF               	movwf	indf2,c
  2164                           
  2165                           ;fsm_cube.c: 285: current_state = FSM_SEQ_ON3;
  2166  001544  0E0B               	movlw	11
  2167  001546  6E3C               	movwf	_current_state,c
  2168  001548  0012               	return	
  2169  00154A                     l2255:
  2170                           
  2171                           ;fsm_cube.c: 289: AUDIO_play(all_notes[game3seq[count]]);
  2172  00154A  0E00               	movlw	low _game3seq
  2173  00154C  242B               	addwf	_count,w,c
  2174  00154E  6ED9               	movwf	fsr2l,c
  2175  001550  0E02               	movlw	high _game3seq
  2176  001552  202C               	addwfc	_count+1,w,c
  2177  001554  6EDA               	movwf	fsr2h,c
  2178  001556  50DF               	movf	indf2,w,c
  2179  001558  6E52               	movwf	??_fsm_cube& (0+255),c
  2180  00155A  5052               	movf	??_fsm_cube,w,c
  2181  00155C  0D02               	mullw	2
  2182  00155E  0E01               	movlw	low _all_notes
  2183  001560  24F3               	addwf	prodl,w,c
  2184  001562  6ED9               	movwf	fsr2l,c
  2185  001564  0E00               	movlw	high _all_notes
  2186  001566  20F4               	addwfc	prodh,w,c
  2187  001568  6EDA               	movwf	fsr2h,c
  2188  00156A  CFDE F03E          	movff	postinc2,AUDIO_play@freq
  2189  00156E  CFDD F03F          	movff	postdec2,AUDIO_play@freq+1
  2190  001572  EC59  F00E         	call	_AUDIO_play	;wreg free
  2191                           
  2192                           ;fsm_cube.c: 290: fire_led(game3seq[count]);
  2193  001576  0E00               	movlw	low _game3seq
  2194  001578  242B               	addwf	_count,w,c
  2195  00157A  6ED9               	movwf	fsr2l,c
  2196  00157C  0E02               	movlw	high _game3seq
  2197  00157E  202C               	addwfc	_count+1,w,c
  2198  001580  6EDA               	movwf	fsr2h,c
  2199  001582  50DF               	movf	indf2,w,c
  2200  001584  EC96  F00D         	call	_fire_led
  2201                           
  2202                           ;fsm_cube.c: 291: game_time++;
  2203  001588  4A2F               	infsnz	_game_time,f,c
  2204  00158A  2A30               	incf	_game_time+1,f,c
  2205                           
  2206                           ;fsm_cube.c: 292: if(game_time==1000){
  2207  00158C  0EE8               	movlw	232
  2208  00158E  182F               	xorwf	_game_time,w,c
  2209  001590  E103               	bnz	u1911
  2210  001592  0E03               	movlw	3
  2211  001594  1830               	xorwf	_game_time+1,w,c
  2212  001596  A4D8               	btfss	status,2,c
  2213  001598                     u1911:
  2214  001598  0012               	return	
  2215                           
  2216                           ;fsm_cube.c: 293: game_time=0;
  2217  00159A  0E00               	movlw	0
  2218  00159C  6E30               	movwf	_game_time+1,c
  2219  00159E  0E00               	movlw	0
  2220  0015A0  6E2F               	movwf	_game_time,c
  2221                           
  2222                           ;fsm_cube.c: 294: count++;
  2223  0015A2  4A2B               	infsnz	_count,f,c
  2224  0015A4  2A2C               	incf	_count+1,f,c
  2225                           
  2226                           ;fsm_cube.c: 295: if(count==game_lenght){
  2227  0015A6  5029               	movf	_game_lenght,w,c
  2228  0015A8  182B               	xorwf	_count,w,c
  2229  0015AA  E1A5               	bnz	l2239
  2230  0015AC  502A               	movf	_game_lenght+1,w,c
  2231  0015AE  182C               	xorwf	_count+1,w,c
  2232  0015B0  A4D8               	btfss	status,2,c
  2233  0015B2  D7A1               	goto	l2239
  2234                           
  2235                           ;fsm_cube.c: 296: count=0;
  2236  0015B4  0E00               	movlw	0
  2237  0015B6  6E2C               	movwf	_count+1,c
  2238  0015B8  0E00               	movlw	0
  2239  0015BA  6E2B               	movwf	_count,c
  2240                           
  2241                           ;fsm_cube.c: 297: current_state = FSM_USER3;
  2242  0015BC  0E0E               	movlw	14
  2243  0015BE  6E3C               	movwf	_current_state,c
  2244                           
  2245                           ;fsm_cube.c: 298: }else{
  2246  0015C0  0012               	return	
  2247  0015C2                     l2273:
  2248                           
  2249                           ;fsm_cube.c: 304: if(buttonpressed()==0){
  2250  0015C2  EC2C  F00E         	call	_buttonpressed	;wreg free
  2251  0015C6  0900               	iorlw	0
  2252  0015C8  A4D8               	btfss	status,2,c
  2253  0015CA  0012               	return	
  2254                           
  2255                           ;fsm_cube.c: 305: current_state = FSM_WAIT3;
  2256  0015CC  0E0D               	movlw	13
  2257  0015CE  6E3C               	movwf	_current_state,c
  2258  0015D0  0012               	return	
  2259  0015D2                     l2277:
  2260                           
  2261                           ;fsm_cube.c: 309: AUDIO_stop();
  2262  0015D2  EC68  F00E         	call	_AUDIO_stop	;wreg free
  2263                           
  2264                           ;fsm_cube.c: 310: LATB=0x00;
  2265  0015D6  0E00               	movlw	0
  2266  0015D8  6E8A               	movwf	3978,c	;volatile
  2267                           
  2268                           ;fsm_cube.c: 311: game_time++;
  2269  0015DA  4A2F               	infsnz	_game_time,f,c
  2270  0015DC  2A30               	incf	_game_time+1,f,c
  2271                           
  2272                           ;fsm_cube.c: 312: if(buttonpressed()==1){
  2273  0015DE  EC2C  F00E         	call	_buttonpressed	;wreg free
  2274  0015E2  06E8               	decf	wreg,f,c
  2275  0015E4  A4D8               	btfss	status,2,c
  2276  0015E6  D007               	goto	l2287
  2277                           
  2278                           ;fsm_cube.c: 313: game_time=0;
  2279  0015E8  0E00               	movlw	0
  2280  0015EA  6E30               	movwf	_game_time+1,c
  2281  0015EC  0E00               	movlw	0
  2282  0015EE  6E2F               	movwf	_game_time,c
  2283                           
  2284                           ;fsm_cube.c: 314: current_state = FSM_CHECK3;
  2285  0015F0  0E0F               	movlw	15
  2286  0015F2  6E3C               	movwf	_current_state,c
  2287                           
  2288                           ;fsm_cube.c: 315: }else if(game_time==2000){
  2289  0015F4  0012               	return	
  2290  0015F6                     l2287:
  2291  0015F6  0ED0               	movlw	208
  2292  0015F8  182F               	xorwf	_game_time,w,c
  2293  0015FA  E103               	bnz	u1951
  2294  0015FC  0E07               	movlw	7
  2295  0015FE  1830               	xorwf	_game_time+1,w,c
  2296  001600  A4D8               	btfss	status,2,c
  2297  001602                     u1951:
  2298  001602  0012               	return	
  2299                           
  2300                           ;fsm_cube.c: 316: game_time=0;
  2301  001604  0E00               	movlw	0
  2302  001606  6E30               	movwf	_game_time+1,c
  2303  001608  0E00               	movlw	0
  2304  00160A  6E2F               	movwf	_game_time,c
  2305                           
  2306                           ;fsm_cube.c: 317: current_state = FSM_DEAD3;
  2307  00160C  0E10               	movlw	16
  2308  00160E  6E3C               	movwf	_current_state,c
  2309  001610  0012               	return	
  2310  001612                     l2291:
  2311                           
  2312                           ;fsm_cube.c: 321: if(checkbutton()==game3seq[count]){
  2313  001612  0E00               	movlw	low _game3seq
  2314  001614  242B               	addwf	_count,w,c
  2315  001616  6ED9               	movwf	fsr2l,c
  2316  001618  0E02               	movlw	high _game3seq
  2317  00161A  202C               	addwfc	_count+1,w,c
  2318  00161C  6EDA               	movwf	fsr2h,c
  2319  00161E  50DF               	movf	indf2,w,c
  2320  001620  6E52               	movwf	??_fsm_cube& (0+255),c
  2321  001622  6A53               	clrf	(??_fsm_cube+1)& (0+255),c
  2322  001624  BE52               	btfsc	??_fsm_cube& (0+255),7,c
  2323  001626  0653               	decf	(??_fsm_cube+1)& (0+255),f,c
  2324  001628  ECBB  F00D         	call	_checkbutton	;wreg free
  2325  00162C  6E54               	movwf	(??_fsm_cube+2)& (0+255),c
  2326  00162E  6A55               	clrf	(??_fsm_cube+3)& (0+255),c
  2327  001630  5052               	movf	??_fsm_cube,w,c
  2328  001632  1854               	xorwf	??_fsm_cube+2,w,c
  2329  001634  E134               	bnz	l2311
  2330  001636  5053               	movf	??_fsm_cube+1,w,c
  2331  001638  1855               	xorwf	??_fsm_cube+3,w,c
  2332  00163A  A4D8               	btfss	status,2,c
  2333  00163C  D030               	goto	l2311
  2334                           
  2335                           ;fsm_cube.c: 322: fire_led(checkbutton());
  2336  00163E  ECBB  F00D         	call	_checkbutton	;wreg free
  2337  001642  EC96  F00D         	call	_fire_led
  2338                           
  2339                           ;fsm_cube.c: 323: AUDIO_play(all_notes[checkbutton()]);
  2340  001646  ECBB  F00D         	call	_checkbutton	;wreg free
  2341  00164A  6E52               	movwf	??_fsm_cube& (0+255),c
  2342  00164C  5052               	movf	??_fsm_cube,w,c
  2343  00164E  0D02               	mullw	2
  2344  001650  0E01               	movlw	low _all_notes
  2345  001652  24F3               	addwf	prodl,w,c
  2346  001654  6ED9               	movwf	fsr2l,c
  2347  001656  0E00               	movlw	high _all_notes
  2348  001658  20F4               	addwfc	prodh,w,c
  2349  00165A  6EDA               	movwf	fsr2h,c
  2350  00165C  CFDE F03E          	movff	postinc2,AUDIO_play@freq
  2351  001660  CFDD F03F          	movff	postdec2,AUDIO_play@freq+1
  2352  001664  EC59  F00E         	call	_AUDIO_play	;wreg free
  2353                           
  2354                           ;fsm_cube.c: 324: count++;
  2355  001668  4A2B               	infsnz	_count,f,c
  2356  00166A  2A2C               	incf	_count+1,f,c
  2357                           
  2358                           ;fsm_cube.c: 325: if (count==game_lenght){
  2359  00166C  5029               	movf	_game_lenght,w,c
  2360  00166E  182B               	xorwf	_count,w,c
  2361  001670  E110               	bnz	l2309
  2362  001672  502A               	movf	_game_lenght+1,w,c
  2363  001674  182C               	xorwf	_count+1,w,c
  2364  001676  A4D8               	btfss	status,2,c
  2365  001678  D00C               	goto	l2309
  2366                           
  2367                           ;fsm_cube.c: 326: game_time=0;
  2368  00167A  0E00               	movlw	0
  2369  00167C  6E30               	movwf	_game_time+1,c
  2370  00167E  0E00               	movlw	0
  2371  001680  6E2F               	movwf	_game_time,c
  2372                           
  2373                           ;fsm_cube.c: 327: game_lenght++;
  2374  001682  4A29               	infsnz	_game_lenght,f,c
  2375  001684  2A2A               	incf	_game_lenght+1,f,c
  2376                           
  2377                           ;fsm_cube.c: 328: count=0;
  2378  001686  0E00               	movlw	0
  2379  001688  6E2C               	movwf	_count+1,c
  2380  00168A  0E00               	movlw	0
  2381  00168C  6E2B               	movwf	_count,c
  2382                           
  2383                           ;fsm_cube.c: 329: current_state=FSM_SEQ_OFF3;
  2384  00168E  0E0C               	movlw	12
  2385  001690  D00B               	goto	L1
  2386  001692                     l2309:
  2387                           
  2388                           ;fsm_cube.c: 331: game_time=0;
  2389  001692  0E00               	movlw	0
  2390  001694  6E30               	movwf	_game_time+1,c
  2391  001696  0E00               	movlw	0
  2392  001698  6E2F               	movwf	_game_time,c
  2393                           
  2394                           ;fsm_cube.c: 332: current_state=FSM_USER3;
  2395  00169A  0E0E               	movlw	14
  2396  00169C  D005               	goto	L1
  2397  00169E                     l2311:
  2398                           
  2399                           ;fsm_cube.c: 335: {;fsm_cube.c: 336: game_time=0;
  2400  00169E  0E00               	movlw	0
  2401  0016A0  6E30               	movwf	_game_time+1,c
  2402  0016A2  0E00               	movlw	0
  2403  0016A4  6E2F               	movwf	_game_time,c
  2404                           
  2405                           ;fsm_cube.c: 337: current_state=FSM_DEAD3;
  2406  0016A6  0E10               	movlw	16
  2407  0016A8                     L1:
  2408  0016A8  6E3C               	movwf	_current_state,c
  2409  0016AA                     l2313:
  2410                           
  2411                           ;fsm_cube.c: 340: AUDIO_stop();
  2412  0016AA  EC68  F00E         	call	_AUDIO_stop	;wreg free
  2413                           
  2414                           ;fsm_cube.c: 341: game_time++;
  2415  0016AE  4A2F               	infsnz	_game_time,f,c
  2416  0016B0  2A30               	incf	_game_time+1,f,c
  2417                           
  2418                           ;fsm_cube.c: 342: if(game_lenght==0)
  2419  0016B2  5029               	movf	_game_lenght,w,c
  2420  0016B4  102A               	iorwf	_game_lenght+1,w,c
  2421  0016B6  A4D8               	btfss	status,2,c
  2422  0016B8  D006               	goto	l2321
  2423                           
  2424                           ;fsm_cube.c: 343: {;fsm_cube.c: 344: time=0;
  2425  0016BA  0E00               	movlw	0
  2426  0016BC  6E32               	movwf	_time+1,c
  2427  0016BE  0E00               	movlw	0
  2428  0016C0  6E31               	movwf	_time,c
  2429                           
  2430                           ;fsm_cube.c: 345: current_state = FSM_ASKING;
  2431  0016C2  0E00               	movlw	0
  2432  0016C4  6E3C               	movwf	_current_state,c
  2433  0016C6                     l2321:
  2434                           
  2435                           ;fsm_cube.c: 346: };fsm_cube.c: 347: if(game_time==200){
  2436  0016C6  0EC8               	movlw	200
  2437  0016C8  182F               	xorwf	_game_time,w,c
  2438  0016CA  1030               	iorwf	_game_time+1,w,c
  2439  0016CC  A4D8               	btfss	status,2,c
  2440  0016CE  D002               	goto	l2325
  2441                           
  2442                           ;fsm_cube.c: 348: LATB=0xFC;
  2443  0016D0  0EFC               	movlw	252
  2444  0016D2  6E8A               	movwf	3978,c	;volatile
  2445  0016D4                     l2325:
  2446                           
  2447                           ;fsm_cube.c: 349: };fsm_cube.c: 350: if(game_time==400){
  2448  0016D4  0E90               	movlw	144
  2449  0016D6  182F               	xorwf	_game_time,w,c
  2450  0016D8  E13F               	bnz	l149
  2451  0016DA  0430               	decf	_game_time+1,w,c
  2452  0016DC  A4D8               	btfss	status,2,c
  2453  0016DE  0012               	return	
  2454                           
  2455                           ;fsm_cube.c: 351: game_lenght--;
  2456  0016E0  0629               	decf	_game_lenght,f,c
  2457  0016E2  A0D8               	btfss	status,0,c
  2458  0016E4  062A               	decf	_game_lenght+1,f,c
  2459  0016E6  D58B               	goto	l2073
  2460  0016E8                     l2333:
  2461                           
  2462                           ;fsm_cube.c: 358: current_state = FSM_ASKING;
  2463  0016E8  0E00               	movlw	0
  2464  0016EA  6E3C               	movwf	_current_state,c
  2465                           
  2466                           ;fsm_cube.c: 359: }
  2467  0016EC  0012               	return	
  2468  0016EE                     l2335:
  2469  0016EE  503C               	movf	_current_state,w,c
  2470                           
  2471                           ; Switch size 1, requested type "simple"
  2472                           ; Number of cases is 17, Range of values is 0 to 16
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte           52    27 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477  0016F0  0A00               	xorlw	0	; case 0
  2478  0016F2  B4D8               	btfsc	status,2,c
  2479  0016F4  D491               	goto	l65
  2480  0016F6  0A01               	xorlw	1	; case 1
  2481  0016F8  B4D8               	btfsc	status,2,c
  2482  0016FA  D4D3               	goto	l2013
  2483  0016FC  0A03               	xorlw	3	; case 2
  2484  0016FE  B4D8               	btfsc	status,2,c
  2485  001700  D4EA               	goto	l2021
  2486  001702  0A01               	xorlw	1	; case 3
  2487  001704  B4D8               	btfsc	status,2,c
  2488  001706  D523               	goto	l2041
  2489  001708  0A07               	xorlw	7	; case 4
  2490  00170A  B4D8               	btfsc	status,2,c
  2491  00170C  D558               	goto	l2057
  2492  00170E  0A01               	xorlw	1	; case 5
  2493  001710  B4D8               	btfsc	status,2,c
  2494  001712  D57C               	goto	l2077
  2495  001714  0A03               	xorlw	3	; case 6
  2496  001716  B4D8               	btfsc	status,2,c
  2497  001718  D587               	goto	l2089
  2498  00171A  0A01               	xorlw	1	; case 7
  2499  00171C  B4D8               	btfsc	status,2,c
  2500  00171E  D5D1               	goto	l2119
  2501  001720  0A0F               	xorlw	15	; case 8
  2502  001722  B4D8               	btfsc	status,2,c
  2503  001724  D629               	goto	l2155
  2504  001726  0A01               	xorlw	1	; case 9
  2505  001728  B4D8               	btfsc	status,2,c
  2506  00172A  D695               	goto	l2207
  2507  00172C  0A03               	xorlw	3	; case 10
  2508  00172E  B4D8               	btfsc	status,2,c
  2509  001730  D6C9               	goto	l2227
  2510  001732  0A01               	xorlw	1	; case 11
  2511  001734  B4D8               	btfsc	status,2,c
  2512  001736  D709               	goto	l2255
  2513  001738  0A07               	xorlw	7	; case 12
  2514  00173A  B4D8               	btfsc	status,2,c
  2515  00173C  D6DF               	goto	l2241
  2516  00173E  0A01               	xorlw	1	; case 13
  2517  001740  B4D8               	btfsc	status,2,c
  2518  001742  D747               	goto	l2277
  2519  001744  0A03               	xorlw	3	; case 14
  2520  001746  B4D8               	btfsc	status,2,c
  2521  001748  D73C               	goto	l2273
  2522  00174A  0A01               	xorlw	1	; case 15
  2523  00174C  B4D8               	btfsc	status,2,c
  2524  00174E  D761               	goto	l2291
  2525  001750  0A1F               	xorlw	31	; case 16
  2526  001752  B4D8               	btfsc	status,2,c
  2527  001754  D7AA               	goto	l2313
  2528  001756  D7C8               	goto	l2333
  2529  001758                     l149:
  2530  001758  0012               	return		;funcret
  2531  00175A                     __end_of_fsm_cube:
  2532                           	opt callstack 0
  2533                           
  2534 ;; *************** function _srand *****************
  2535 ;; Defined at:
  2536 ;;		line 6 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/rand.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  x               2    1[COMRAM] unsigned int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		status,2
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2550 ;;      Params:         2       0       0       0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2553 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        2 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_fsm_cube
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text8
  2565  001CC2                     __ptext8:
  2566                           	opt callstack 0
  2567  001CC2                     _srand:
  2568                           	opt callstack 27
  2569                           
  2570                           ;incstack = 0
  2571  001CC2  C03E  F01F         	movff	srand@x,_randx
  2572  001CC6  C03F  F020         	movff	srand@x+1,_randx+1
  2573  001CCA  6A21               	clrf	_randx+2,c
  2574  001CCC  6A22               	clrf	_randx+3,c
  2575  001CCE  0012               	return		;funcret
  2576  001CD0                     __end_of_srand:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function _rand *****************
  2580 ;; Defined at:
  2581 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/rand.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2   13[COMRAM] int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         2       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    3
  2602 ;; This function calls:
  2603 ;;		___lmul
  2604 ;; This function is called by:
  2605 ;;		_fsm_cube
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text9
  2610  001A3A                     __ptext9:
  2611                           	opt callstack 0
  2612  001A3A                     _rand:
  2613                           	opt callstack 26
  2614                           
  2615                           ;incstack = 0
  2616  001A3A  C01F  F03E         	movff	_randx,___lmul@multiplier
  2617  001A3E  C020  F03F         	movff	_randx+1,___lmul@multiplier+1
  2618  001A42  C021  F040         	movff	_randx+2,___lmul@multiplier+2
  2619  001A46  C022  F041         	movff	_randx+3,___lmul@multiplier+3
  2620  001A4A  0E6D               	movlw	109
  2621  001A4C  6E42               	movwf	___lmul@multiplicand,c
  2622  001A4E  0E4E               	movlw	78
  2623  001A50  6E43               	movwf	___lmul@multiplicand+1,c
  2624  001A52  0EC6               	movlw	198
  2625  001A54  6E44               	movwf	___lmul@multiplicand+2,c
  2626  001A56  0E41               	movlw	65
  2627  001A58  6E45               	movwf	___lmul@multiplicand+3,c
  2628  001A5A  ECC8  F00C         	call	___lmul	;wreg free
  2629  001A5E  C03E  F01F         	movff	?___lmul,_randx
  2630  001A62  C03F  F020         	movff	?___lmul+1,_randx+1
  2631  001A66  C040  F021         	movff	?___lmul+2,_randx+2
  2632  001A6A  C041  F022         	movff	?___lmul+3,_randx+3
  2633  001A6E  0E39               	movlw	57
  2634  001A70  261F               	addwf	_randx,f,c
  2635  001A72  0E30               	movlw	48
  2636  001A74  2220               	addwfc	_randx+1,f,c
  2637  001A76  0E00               	movlw	0
  2638  001A78  2221               	addwfc	_randx+2,f,c
  2639  001A7A  0E00               	movlw	0
  2640  001A7C  2222               	addwfc	_randx+3,f,c
  2641  001A7E  0EFF               	movlw	255
  2642  001A80  1421               	andwf	_randx+2,w,c
  2643  001A82  6E4A               	movwf	?_rand,c
  2644  001A84  0E7F               	movlw	127
  2645  001A86  1422               	andwf	_randx+3,w,c
  2646  001A88  6E4B               	movwf	?_rand+1,c
  2647  001A8A  0012               	return		;funcret
  2648  001A8C                     __end_of_rand:
  2649                           	opt callstack 0
  2650                           
  2651 ;; *************** function ___lmul *****************
  2652 ;; Defined at:
  2653 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/Umul32.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  multiplier      4    1[COMRAM] unsigned long 
  2656 ;;  multiplicand    4    5[COMRAM] unsigned long 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  product         4    9[COMRAM] unsigned long 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  4    1[COMRAM] unsigned long 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2668 ;;      Params:         8       0       0       0       0       0       0       0       0
  2669 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2671 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2672 ;;Total ram usage:       12 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    2
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_rand
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text10
  2683  001990                     __ptext10:
  2684                           	opt callstack 0
  2685  001990                     ___lmul:
  2686                           	opt callstack 26
  2687                           
  2688                           ;incstack = 0
  2689  001990  0E00               	movlw	0
  2690  001992  6E46               	movwf	___lmul@product,c
  2691  001994  0E00               	movlw	0
  2692  001996  6E47               	movwf	___lmul@product+1,c
  2693  001998  0E00               	movlw	0
  2694  00199A  6E48               	movwf	___lmul@product+2,c
  2695  00199C  0E00               	movlw	0
  2696  00199E  6E49               	movwf	___lmul@product+3,c
  2697  0019A0                     l1815:
  2698  0019A0  A03E               	btfss	___lmul@multiplier,0,c
  2699  0019A2  D008               	goto	l1819
  2700  0019A4  5042               	movf	___lmul@multiplicand,w,c
  2701  0019A6  2646               	addwf	___lmul@product,f,c
  2702  0019A8  5043               	movf	___lmul@multiplicand+1,w,c
  2703  0019AA  2247               	addwfc	___lmul@product+1,f,c
  2704  0019AC  5044               	movf	___lmul@multiplicand+2,w,c
  2705  0019AE  2248               	addwfc	___lmul@product+2,f,c
  2706  0019B0  5045               	movf	___lmul@multiplicand+3,w,c
  2707  0019B2  2249               	addwfc	___lmul@product+3,f,c
  2708  0019B4                     l1819:
  2709  0019B4  90D8               	bcf	status,0,c
  2710  0019B6  3642               	rlcf	___lmul@multiplicand,f,c
  2711  0019B8  3643               	rlcf	___lmul@multiplicand+1,f,c
  2712  0019BA  3644               	rlcf	___lmul@multiplicand+2,f,c
  2713  0019BC  3645               	rlcf	___lmul@multiplicand+3,f,c
  2714  0019BE  90D8               	bcf	status,0,c
  2715  0019C0  3241               	rrcf	___lmul@multiplier+3,f,c
  2716  0019C2  3240               	rrcf	___lmul@multiplier+2,f,c
  2717  0019C4  323F               	rrcf	___lmul@multiplier+1,f,c
  2718  0019C6  323E               	rrcf	___lmul@multiplier,f,c
  2719  0019C8  503E               	movf	___lmul@multiplier,w,c
  2720  0019CA  103F               	iorwf	___lmul@multiplier+1,w,c
  2721  0019CC  1040               	iorwf	___lmul@multiplier+2,w,c
  2722  0019CE  1041               	iorwf	___lmul@multiplier+3,w,c
  2723  0019D0  A4D8               	btfss	status,2,c
  2724  0019D2  D7E6               	goto	l1815
  2725  0019D4  C046  F03E         	movff	___lmul@product,?___lmul
  2726  0019D8  C047  F03F         	movff	___lmul@product+1,?___lmul+1
  2727  0019DC  C048  F040         	movff	___lmul@product+2,?___lmul+2
  2728  0019E0  C049  F041         	movff	___lmul@product+3,?___lmul+3
  2729  0019E4  0012               	return		;funcret
  2730  0019E6                     __end_of___lmul:
  2731                           	opt callstack 0
  2732                           
  2733 ;; *************** function _fire_led *****************
  2734 ;; Defined at:
  2735 ;;		line 361 in file "fsm_cube.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  ledint          1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  ledint          1    1[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0
  2750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2752 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2753 ;;Total ram usage:        1 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    2
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_fsm_cube
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text11
  2764  001B2C                     __ptext11:
  2765                           	opt callstack 0
  2766  001B2C                     _fire_led:
  2767                           	opt callstack 27
  2768                           
  2769                           ;incstack = 0
  2770                           ;fire_led@ledint stored from wreg
  2771  001B2C  6E3E               	movwf	fire_led@ledint,c
  2772                           
  2773                           ;fsm_cube.c: 362: switch(ledint){
  2774  001B2E  D00F               	goto	l1833
  2775  001B30                     l153:
  2776                           
  2777                           ;fsm_cube.c: 364: LATBbits.LATB2=1;
  2778  001B30  848A               	bsf	3978,2,c	;volatile
  2779                           
  2780                           ;fsm_cube.c: 365: break;
  2781  001B32  0012               	return	
  2782  001B34                     l155:
  2783                           
  2784                           ;fsm_cube.c: 367: LATBbits.LATB3=1;
  2785  001B34  868A               	bsf	3978,3,c	;volatile
  2786                           
  2787                           ;fsm_cube.c: 368: break;
  2788  001B36  0012               	return	
  2789  001B38                     l156:
  2790                           
  2791                           ;fsm_cube.c: 370: LATBbits.LATB4=1;
  2792  001B38  888A               	bsf	3978,4,c	;volatile
  2793                           
  2794                           ;fsm_cube.c: 371: break;
  2795  001B3A  0012               	return	
  2796  001B3C                     l157:
  2797                           
  2798                           ;fsm_cube.c: 373: LATBbits.LATB5=1;
  2799  001B3C  8A8A               	bsf	3978,5,c	;volatile
  2800                           
  2801                           ;fsm_cube.c: 374: break;
  2802  001B3E  0012               	return	
  2803  001B40                     l158:
  2804                           
  2805                           ;fsm_cube.c: 376: LATBbits.LATB6=1;
  2806  001B40  8C8A               	bsf	3978,6,c	;volatile
  2807                           
  2808                           ;fsm_cube.c: 377: break;
  2809  001B42  0012               	return	
  2810  001B44                     l159:
  2811                           
  2812                           ;fsm_cube.c: 379: LATBbits.LATB7=1;
  2813  001B44  8E8A               	bsf	3978,7,c	;volatile
  2814                           
  2815                           ;fsm_cube.c: 380: break;
  2816  001B46  0012               	return	
  2817  001B48                     l1831:
  2818                           
  2819                           ;fsm_cube.c: 382: LATB = 0x00;
  2820  001B48  0E00               	movlw	0
  2821  001B4A  6E8A               	movwf	3978,c	;volatile
  2822                           
  2823                           ;fsm_cube.c: 383: }
  2824  001B4C  0012               	return	
  2825  001B4E                     l1833:
  2826  001B4E  503E               	movf	fire_led@ledint,w,c
  2827                           
  2828                           ; Switch size 1, requested type "simple"
  2829                           ; Number of cases is 6, Range of values is 0 to 5
  2830                           ; switch strategies available:
  2831                           ; Name         Instructions Cycles
  2832                           ; simple_byte           19    10 (average)
  2833                           ;	Chosen strategy is simple_byte
  2834  001B50  0A00               	xorlw	0	; case 0
  2835  001B52  B4D8               	btfsc	status,2,c
  2836  001B54  D7ED               	goto	l153
  2837  001B56  0A01               	xorlw	1	; case 1
  2838  001B58  B4D8               	btfsc	status,2,c
  2839  001B5A  D7EC               	goto	l155
  2840  001B5C  0A03               	xorlw	3	; case 2
  2841  001B5E  B4D8               	btfsc	status,2,c
  2842  001B60  D7EB               	goto	l156
  2843  001B62  0A01               	xorlw	1	; case 3
  2844  001B64  B4D8               	btfsc	status,2,c
  2845  001B66  D7EA               	goto	l157
  2846  001B68  0A07               	xorlw	7	; case 4
  2847  001B6A  B4D8               	btfsc	status,2,c
  2848  001B6C  D7E9               	goto	l158
  2849  001B6E  0A01               	xorlw	1	; case 5
  2850  001B70  B4D8               	btfsc	status,2,c
  2851  001B72  D7E8               	goto	l159
  2852  001B74  D7E9               	goto	l1831
  2853  001B76                     __end_of_fire_led:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _checkbutton *****************
  2857 ;; Defined at:
  2858 ;;		line 392 in file "fsm_cube.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      unsigned char 
  2865 ;; Registers used:
  2866 ;;		wreg
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    2
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_fsm_cube
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text12
  2887  001B76                     __ptext12:
  2888                           	opt callstack 0
  2889  001B76                     _checkbutton:
  2890                           	opt callstack 27
  2891                           
  2892                           ;fsm_cube.c: 393: if(PORTCbits.RC2==1)
  2893                           
  2894                           ;incstack = 0
  2895  001B76  A482               	btfss	3970,2,c	;volatile
  2896  001B78  D002               	goto	l171
  2897                           
  2898                           ;fsm_cube.c: 394: {;fsm_cube.c: 395: return 0;
  2899  001B7A  0E00               	movlw	0
  2900  001B7C  0012               	return	
  2901  001B7E                     l171:
  2902                           
  2903                           ;fsm_cube.c: 397: else if(PORTCbits.RC1==1)
  2904  001B7E  A282               	btfss	3970,1,c	;volatile
  2905  001B80  D002               	goto	l174
  2906                           
  2907                           ;fsm_cube.c: 398: {;fsm_cube.c: 399: return 1;
  2908  001B82  0E01               	movlw	1
  2909  001B84  0012               	return	
  2910  001B86                     l174:
  2911                           
  2912                           ;fsm_cube.c: 401: else if(PORTCbits.RC6==1)
  2913  001B86  AC82               	btfss	3970,6,c	;volatile
  2914  001B88  D002               	goto	l176
  2915                           
  2916                           ;fsm_cube.c: 402: {;fsm_cube.c: 403: return 2;
  2917  001B8A  0E02               	movlw	2
  2918  001B8C  0012               	return	
  2919  001B8E                     l176:
  2920                           
  2921                           ;fsm_cube.c: 405: else if(PORTCbits.RC7==1)
  2922  001B8E  AE82               	btfss	3970,7,c	;volatile
  2923  001B90  D002               	goto	l178
  2924                           
  2925                           ;fsm_cube.c: 406: {;fsm_cube.c: 407: return 3;
  2926  001B92  0E03               	movlw	3
  2927  001B94  0012               	return	
  2928  001B96                     l178:
  2929                           
  2930                           ;fsm_cube.c: 409: else if(PORTBbits.RB0==1)
  2931  001B96  A081               	btfss	3969,0,c	;volatile
  2932  001B98  D002               	goto	l180
  2933                           
  2934                           ;fsm_cube.c: 410: {;fsm_cube.c: 411: return 4;
  2935  001B9A  0E04               	movlw	4
  2936  001B9C  0012               	return	
  2937  001B9E                     l180:
  2938                           
  2939                           ;fsm_cube.c: 413: else if(PORTBbits.RB1==1)
  2940  001B9E  A281               	btfss	3969,1,c	;volatile
  2941  001BA0  D002               	goto	l1897
  2942                           
  2943                           ;fsm_cube.c: 414: {;fsm_cube.c: 415: return 5;
  2944  001BA2  0E05               	movlw	5
  2945  001BA4  0012               	return	
  2946  001BA6                     l1897:
  2947                           
  2948                           ;fsm_cube.c: 417: else;fsm_cube.c: 418: {;fsm_cube.c: 419: return -1;
  2949  001BA6  0EFF               	movlw	255
  2950  001BA8  0012               	return		;funcret
  2951  001BAA                     __end_of_checkbutton:
  2952                           	opt callstack 0
  2953                           
  2954 ;; *************** function _buttonpressed *****************
  2955 ;; Defined at:
  2956 ;;		line 385 in file "fsm_cube.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      unsigned char 
  2963 ;; Registers used:
  2964 ;;		wreg
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    2
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_fsm_cube
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text13
  2985  001C58                     __ptext13:
  2986                           	opt callstack 0
  2987  001C58                     _buttonpressed:
  2988                           	opt callstack 27
  2989                           
  2990                           ;fsm_cube.c: 386: if((PORTCbits.RC2==1)||(PORTCbits.RC1==1)||(PORTCbits.RC6==1)||(PORTCb
      +                          its.RC7==1)||(PORTBbits.RB0==1)||(PORTBbits.RB1==1)){
  2991                           
  2992                           ;incstack = 0
  2993  001C58  A482               	btfss	3970,2,c	;volatile
  2994  001C5A  B282               	btfsc	3970,1,c	;volatile
  2995  001C5C  D007               	goto	u1180
  2996  001C5E  AC82               	btfss	3970,6,c	;volatile
  2997  001C60  BE82               	btfsc	3970,7,c	;volatile
  2998  001C62  D004               	goto	u1180
  2999  001C64  B081               	btfsc	3969,0,c	;volatile
  3000  001C66  D002               	goto	u1180
  3001  001C68  A281               	btfss	3969,1,c	;volatile
  3002  001C6A  D002               	goto	l1853
  3003  001C6C                     u1180:
  3004                           
  3005                           ;fsm_cube.c: 387: return 1;
  3006  001C6C  0E01               	movlw	1
  3007  001C6E  0012               	return	
  3008  001C70                     l1853:
  3009                           
  3010                           ;fsm_cube.c: 389: return 0;
  3011  001C70  0E00               	movlw	0
  3012  001C72  0012               	return		;funcret
  3013  001C74                     __end_of_buttonpressed:
  3014                           	opt callstack 0
  3015                           
  3016 ;; *************** function _abs *****************
  3017 ;; Defined at:
  3018 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/abs.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  a               2    1[COMRAM] int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    1[COMRAM] int 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         2       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_fsm_cube
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text14
  3047  001C0E                     __ptext14:
  3048                           	opt callstack 0
  3049  001C0E                     _abs:
  3050                           	opt callstack 27
  3051                           
  3052                           ;incstack = 0
  3053  001C0E  AE3F               	btfss	abs@a+1,7,c
  3054  001C10  D00D               	goto	l1008
  3055  001C12  C03E  F040         	movff	abs@a,??_abs
  3056  001C16  C03F  F041         	movff	abs@a+1,??_abs+1
  3057  001C1A  1E40               	comf	??_abs,f,c
  3058  001C1C  1E41               	comf	??_abs+1,f,c
  3059  001C1E  4A40               	infsnz	??_abs,f,c
  3060  001C20  2A41               	incf	??_abs+1,f,c
  3061  001C22  C040  F03E         	movff	??_abs,?_abs
  3062  001C26  C041  F03F         	movff	??_abs+1,?_abs+1
  3063  001C2A  0012               	return	
  3064  001C2C                     l1008:
  3065  001C2C  C03E  F03E         	movff	abs@a,?_abs
  3066  001C30  C03F  F03F         	movff	abs@a+1,?_abs+1
  3067  001C34  0012               	return		;funcret
  3068  001C36                     __end_of_abs:
  3069                           	opt callstack 0
  3070                           
  3071 ;; *************** function ___lwdiv *****************
  3072 ;; Defined at:
  3073 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  dividend        2    1[COMRAM] unsigned int 
  3076 ;;  divisor         2    3[COMRAM] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  quotient        2    5[COMRAM] unsigned int 
  3079 ;;  counter         1    7[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2    1[COMRAM] unsigned int 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3089 ;;      Params:         4       0       0       0       0       0       0       0       0
  3090 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3092 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3093 ;;Total ram usage:        7 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_fsm_cube
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text15
  3104  001A8C                     __ptext15:
  3105                           	opt callstack 0
  3106  001A8C                     ___lwdiv:
  3107                           	opt callstack 27
  3108                           
  3109                           ;incstack = 0
  3110  001A8C  0E00               	movlw	0
  3111  001A8E  6E43               	movwf	___lwdiv@quotient+1,c
  3112  001A90  0E00               	movlw	0
  3113  001A92  6E42               	movwf	___lwdiv@quotient,c
  3114  001A94  5040               	movf	___lwdiv@divisor,w,c
  3115  001A96  1041               	iorwf	___lwdiv@divisor+1,w,c
  3116  001A98  B4D8               	btfsc	status,2,c
  3117  001A9A  D01C               	goto	l825
  3118  001A9C  0E01               	movlw	1
  3119  001A9E  6E44               	movwf	___lwdiv@counter,c
  3120  001AA0  D004               	goto	l1959
  3121  001AA2                     l1957:
  3122  001AA2  90D8               	bcf	status,0,c
  3123  001AA4  3640               	rlcf	___lwdiv@divisor,f,c
  3124  001AA6  3641               	rlcf	___lwdiv@divisor+1,f,c
  3125  001AA8  2A44               	incf	___lwdiv@counter,f,c
  3126  001AAA                     l1959:
  3127  001AAA  AE41               	btfss	___lwdiv@divisor+1,7,c
  3128  001AAC  D7FA               	goto	l1957
  3129  001AAE                     u1330:
  3130  001AAE  90D8               	bcf	status,0,c
  3131  001AB0  3642               	rlcf	___lwdiv@quotient,f,c
  3132  001AB2  3643               	rlcf	___lwdiv@quotient+1,f,c
  3133  001AB4  5040               	movf	___lwdiv@divisor,w,c
  3134  001AB6  5C3E               	subwf	___lwdiv@dividend,w,c
  3135  001AB8  5041               	movf	___lwdiv@divisor+1,w,c
  3136  001ABA  583F               	subwfb	___lwdiv@dividend+1,w,c
  3137  001ABC  A0D8               	btfss	status,0,c
  3138  001ABE  D005               	goto	l1969
  3139  001AC0  5040               	movf	___lwdiv@divisor,w,c
  3140  001AC2  5E3E               	subwf	___lwdiv@dividend,f,c
  3141  001AC4  5041               	movf	___lwdiv@divisor+1,w,c
  3142  001AC6  5A3F               	subwfb	___lwdiv@dividend+1,f,c
  3143  001AC8  8042               	bsf	___lwdiv@quotient,0,c
  3144  001ACA                     l1969:
  3145  001ACA  90D8               	bcf	status,0,c
  3146  001ACC  3241               	rrcf	___lwdiv@divisor+1,f,c
  3147  001ACE  3240               	rrcf	___lwdiv@divisor,f,c
  3148  001AD0  2E44               	decfsz	___lwdiv@counter,f,c
  3149  001AD2  D7ED               	goto	u1330
  3150  001AD4                     l825:
  3151  001AD4  C042  F03E         	movff	___lwdiv@quotient,?___lwdiv
  3152  001AD8  C043  F03F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3153  001ADC  0012               	return		;funcret
  3154  001ADE                     __end_of___lwdiv:
  3155                           	opt callstack 0
  3156                           
  3157 ;; *************** function ___awmod *****************
  3158 ;; Defined at:
  3159 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c90/common/awmod.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  dividend        2   15[COMRAM] int 
  3162 ;;  divisor         2   17[COMRAM] int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  sign            1   20[COMRAM] unsigned char 
  3165 ;;  counter         1   19[COMRAM] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2   15[COMRAM] int 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3175 ;;      Params:         4       0       0       0       0       0       0       0       0
  3176 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3178 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3179 ;;Total ram usage:        6 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    2
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_fsm_cube
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text16
  3190  0018C6                     __ptext16:
  3191                           	opt callstack 0
  3192  0018C6                     ___awmod:
  3193                           	opt callstack 27
  3194                           
  3195                           ;incstack = 0
  3196  0018C6  0E00               	movlw	0
  3197  0018C8  6E51               	movwf	___awmod@sign,c
  3198  0018CA  AE4D               	btfss	___awmod@dividend+1,7,c
  3199  0018CC  D006               	goto	l1923
  3200  0018CE  6C4C               	negf	___awmod@dividend,c
  3201  0018D0  1E4D               	comf	___awmod@dividend+1,f,c
  3202  0018D2  B0D8               	btfsc	status,0,c
  3203  0018D4  2A4D               	incf	___awmod@dividend+1,f,c
  3204  0018D6  0E01               	movlw	1
  3205  0018D8  6E51               	movwf	___awmod@sign,c
  3206  0018DA                     l1923:
  3207  0018DA  AE4F               	btfss	___awmod@divisor+1,7,c
  3208  0018DC  D004               	goto	l1927
  3209  0018DE  6C4E               	negf	___awmod@divisor,c
  3210  0018E0  1E4F               	comf	___awmod@divisor+1,f,c
  3211  0018E2  B0D8               	btfsc	status,0,c
  3212  0018E4  2A4F               	incf	___awmod@divisor+1,f,c
  3213  0018E6                     l1927:
  3214  0018E6  504E               	movf	___awmod@divisor,w,c
  3215  0018E8  104F               	iorwf	___awmod@divisor+1,w,c
  3216  0018EA  B4D8               	btfsc	status,2,c
  3217  0018EC  D018               	goto	l1943
  3218  0018EE  0E01               	movlw	1
  3219  0018F0  6E50               	movwf	___awmod@counter,c
  3220  0018F2  D004               	goto	l1933
  3221  0018F4                     l1931:
  3222  0018F4  90D8               	bcf	status,0,c
  3223  0018F6  364E               	rlcf	___awmod@divisor,f,c
  3224  0018F8  364F               	rlcf	___awmod@divisor+1,f,c
  3225  0018FA  2A50               	incf	___awmod@counter,f,c
  3226  0018FC                     l1933:
  3227  0018FC  AE4F               	btfss	___awmod@divisor+1,7,c
  3228  0018FE  D7FA               	goto	l1931
  3229  001900                     u1290:
  3230  001900  504E               	movf	___awmod@divisor,w,c
  3231  001902  5C4C               	subwf	___awmod@dividend,w,c
  3232  001904  504F               	movf	___awmod@divisor+1,w,c
  3233  001906  584D               	subwfb	___awmod@dividend+1,w,c
  3234  001908  A0D8               	btfss	status,0,c
  3235  00190A  D004               	goto	l1939
  3236  00190C  504E               	movf	___awmod@divisor,w,c
  3237  00190E  5E4C               	subwf	___awmod@dividend,f,c
  3238  001910  504F               	movf	___awmod@divisor+1,w,c
  3239  001912  5A4D               	subwfb	___awmod@dividend+1,f,c
  3240  001914                     l1939:
  3241  001914  90D8               	bcf	status,0,c
  3242  001916  324F               	rrcf	___awmod@divisor+1,f,c
  3243  001918  324E               	rrcf	___awmod@divisor,f,c
  3244  00191A  2E50               	decfsz	___awmod@counter,f,c
  3245  00191C  D7F1               	goto	u1290
  3246  00191E                     l1943:
  3247  00191E  5051               	movf	___awmod@sign,w,c
  3248  001920  B4D8               	btfsc	status,2,c
  3249  001922  D004               	goto	l1947
  3250  001924  6C4C               	negf	___awmod@dividend,c
  3251  001926  1E4D               	comf	___awmod@dividend+1,f,c
  3252  001928  B0D8               	btfsc	status,0,c
  3253  00192A  2A4D               	incf	___awmod@dividend+1,f,c
  3254  00192C                     l1947:
  3255  00192C  C04C  F04C         	movff	___awmod@dividend,?___awmod
  3256  001930  C04D  F04D         	movff	___awmod@dividend+1,?___awmod+1
  3257  001934  0012               	return		;funcret
  3258  001936                     __end_of___awmod:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function _AUDIO_stop *****************
  3262 ;; Defined at:
  3263 ;;		line 69 in file "func_audio.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    2
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_fsm_cube
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text17
  3292  001CD0                     __ptext17:
  3293                           	opt callstack 0
  3294  001CD0                     _AUDIO_stop:
  3295                           	opt callstack 27
  3296                           
  3297                           ;func_audio.c: 70: stop = 1;
  3298                           
  3299                           ;incstack = 0
  3300  001CD0  0E01               	movlw	1
  3301  001CD2  6E36               	movwf	_stop,c
  3302  001CD4  0012               	return		;funcret
  3303  001CD6                     __end_of_AUDIO_stop:
  3304                           	opt callstack 0
  3305                           
  3306 ;; *************** function _AUDIO_play *****************
  3307 ;; Defined at:
  3308 ;;		line 56 in file "func_audio.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  freq            2    1[COMRAM] unsigned int 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3325 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    2
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_fsm_cube
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text18
  3337  001CB2                     __ptext18:
  3338                           	opt callstack 0
  3339  001CB2                     _AUDIO_play:
  3340                           	opt callstack 27
  3341                           
  3342                           ;func_audio.c: 57: stop = 0;
  3343                           
  3344                           ;incstack = 0
  3345  001CB2  0E00               	movlw	0
  3346  001CB4  6E36               	movwf	_stop,c
  3347                           
  3348                           ;func_audio.c: 58: timer_preload = freq;
  3349  001CB6  C03E  F023         	movff	AUDIO_play@freq,_timer_preload
  3350  001CBA  C03F  F024         	movff	AUDIO_play@freq+1,_timer_preload+1
  3351                           
  3352                           ;func_audio.c: 59: T1CONbits.TMR1ON = 1;
  3353  001CBE  80CD               	bsf	4045,0,c	;volatile
  3354  001CC0  0012               	return		;funcret
  3355  001CC2                     __end_of_AUDIO_play:
  3356                           	opt callstack 0
  3357                           
  3358 ;; *************** function _interrupt_handler *****************
  3359 ;; Defined at:
  3360 ;;		line 152 in file "main.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    1
  3381 ;; This function calls:
  3382 ;;		_AUDIO_ISR
  3383 ;; This function is called by:
  3384 ;;		Interrupt level 2
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	intcode
  3389  001008                     __pintcode:
  3390                           	opt callstack 0
  3391  001008                     _interrupt_handler:
  3392                           	opt callstack 26
  3393                           
  3394                           ;incstack = 0
  3395  001008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3396                           
  3397                           ;main.c: 154: AUDIO_ISR();
  3398  00100A  ECEE  F00D         	call	_AUDIO_ISR	;wreg free
  3399  00100E  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3400  001010  0011               	retfie		f
  3401  001012                     __end_of_interrupt_handler:
  3402                           	opt callstack 0
  3403                           
  3404 ;; *************** function _AUDIO_ISR *****************
  3405 ;; Defined at:
  3406 ;;		line 81 in file "func_audio.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3422 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3424 ;;Total ram usage:        1 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_interrupt_handler
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text20
  3434  001BDC                     __ptext20:
  3435                           	opt callstack 0
  3436  001BDC                     _AUDIO_ISR:
  3437                           	opt callstack 26
  3438                           
  3439                           ;func_audio.c: 82: if (PIR1bits.TMR1IF == 1) {
  3440                           
  3441                           ;incstack = 0
  3442  001BDC  A09E               	btfss	3998,0,c	;volatile
  3443  001BDE  0012               	return	
  3444                           
  3445                           ;func_audio.c: 83: if (stop == 1) {
  3446  001BE0  0436               	decf	_stop,w,c
  3447  001BE2  A4D8               	btfss	status,2,c
  3448  001BE4  D003               	goto	i2l1669
  3449                           
  3450                           ;func_audio.c: 84: T1CONbits.TMR1ON = 0;
  3451  001BE6  90CD               	bcf	4045,0,c	;volatile
  3452                           
  3453                           ;func_audio.c: 85: LATAbits.LATA0 = 0;
  3454  001BE8  9089               	bcf	3977,0,c	;volatile
  3455                           
  3456                           ;func_audio.c: 86: } else {
  3457  001BEA  D00F               	goto	i2l1673
  3458  001BEC                     i2l1669:
  3459                           
  3460                           ;func_audio.c: 87: LATAbits.LATA0 = (unsigned) !LATAbits.LATA0;
  3461  001BEC  B089               	btfsc	3977,0,c	;volatile
  3462  001BEE  D003               	goto	i2u96_40
  3463  001BF0  6A3D               	clrf	??_AUDIO_ISR& (0+255),c
  3464  001BF2  2A3D               	incf	??_AUDIO_ISR& (0+255),f,c
  3465  001BF4  D001               	goto	i2u97_48
  3466  001BF6                     i2u96_40:
  3467  001BF6  6A3D               	clrf	??_AUDIO_ISR& (0+255),c
  3468  001BF8                     i2u97_48:
  3469  001BF8  5089               	movf	3977,w,c	;volatile
  3470  001BFA  183D               	xorwf	??_AUDIO_ISR,w,c
  3471  001BFC  0BFE               	andlw	-2
  3472  001BFE  183D               	xorwf	??_AUDIO_ISR,w,c
  3473  001C00  6E89               	movwf	3977,c	;volatile
  3474                           
  3475                           ;func_audio.c: 88: TMR1 = timer_preload;
  3476  001C02  C023  FFCE         	movff	_timer_preload,4046	;volatile
  3477  001C06  C024  FFCF         	movff	_timer_preload+1,4047	;volatile
  3478  001C0A                     i2l1673:
  3479                           
  3480                           ;func_audio.c: 89: };func_audio.c: 90: PIR1bits.TMR1IF = 0;
  3481  001C0A  909E               	bcf	3998,0,c	;volatile
  3482  001C0C  0012               	return		;funcret
  3483  001C0E                     __end_of_AUDIO_ISR:
  3484                           	opt callstack 0
  3485  0000                     
  3486                           	psect	rparam
  3487  0000                     
  3488                           	psect	temp
  3489  000056                     btemp:
  3490                           	opt callstack 0
  3491  000056                     	ds	1
  3492  0000                     int$flags	set	btemp
  3493  0000                     wtemp8	set	btemp+1
  3494  0000                     ttemp5	set	btemp+1
  3495  0000                     ttemp6	set	btemp+4
  3496  0000                     ttemp7	set	btemp+8
  3497                           tosu	equ	0xFFF
  3498                           tosh	equ	0xFFE
  3499                           tosl	equ	0xFFD
  3500                           stkptr	equ	0xFFC
  3501                           pclatu	equ	0xFFB
  3502                           pclath	equ	0xFFA
  3503                           pcl	equ	0xFF9
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           indf0	equ	0xFEF
  3511                           postinc0	equ	0xFEE
  3512                           postdec0	equ	0xFED
  3513                           preinc0	equ	0xFEC
  3514                           plusw0	equ	0xFEB
  3515                           fsr0h	equ	0xFEA
  3516                           fsr0l	equ	0xFE9
  3517                           wreg	equ	0xFE8
  3518                           indf1	equ	0xFE7
  3519                           postinc1	equ	0xFE6
  3520                           postdec1	equ	0xFE5
  3521                           preinc1	equ	0xFE4
  3522                           plusw1	equ	0xFE3
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           bsr	equ	0xFE0
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           preinc2	equ	0xFDC
  3530                           plusw2	equ	0xFDB
  3531                           fsr2h	equ	0xFDA
  3532                           fsr2l	equ	0xFD9
  3533                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        240
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      85
    BANK0           160      0      90
    BANK1           256      0     116
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_fsm_cube
    _init->_OpenTimer0
    _AUDIO_init->_OpenTimer1
    _fsm_cube->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_AUDIO_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2707
                           _fsm_cube
                               _init
                       _timed_to_1ms
 ---------------------------------------------------------------------------------
 (1) _timed_to_1ms                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      75
                         _AUDIO_init
                         _OpenTimer0
                      _fsm_cube_init
 ---------------------------------------------------------------------------------
 (2) _fsm_cube_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           3     3      0      30
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AUDIO_init                                           0     0      0      45
                         _OpenTimer1
 ---------------------------------------------------------------------------------
 (3) _OpenTimer1                                           3     3      0      45
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fsm_cube                                             4     4      0    2632
                                             21 COMRAM     4     4      0
                         _AUDIO_play
                         _AUDIO_stop
                            ___awmod
                            ___lwdiv
                                _abs
                      _buttonpressed
                        _checkbutton
                           _fire_led
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     174
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             13 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _fire_led                                             1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _checkbutton                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buttonpressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     370
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             15 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _AUDIO_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AUDIO_play                                           2     0      2     630
                                              1 COMRAM     2     0      2
                        _checkbutton (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_handler                                    0     0      0       0
                          _AUDIO_ISR
 ---------------------------------------------------------------------------------
 (5) _AUDIO_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fsm_cube
     _AUDIO_play
       _checkbutton (ARG)
     _AUDIO_stop
     ___awmod
       _rand (ARG)
         ___lmul
     ___lwdiv
     _abs
     _buttonpressed
     _checkbutton
     _fire_led
     _rand
       ___lmul
     _srand
   _init
     _AUDIO_init
       _OpenTimer1
     _OpenTimer0
     _fsm_cube_init
   _timed_to_1ms

 _interrupt_handler (ROOT)
   _AUDIO_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      74       8       45.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      5A       5       56.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      55       1       90.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EB       6        0.0%
DATA                 0      0     1EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 23 19:21:01 2019

                        l65 1018                          l66 1024                          l68 1030  
                        l86 11B0                          u10 1884                          u20 18A6  
                        u18 1886                          u28 18A8                         l101 132E  
                       l103 133E                         l104 1362                         l121 14B6  
                       l113 13EC                         l105 134E                         l115 140E  
                       l117 1430                         l153 1B30                         l171 1B7E  
                       l155 1B34                         l180 1B9E                         l156 1B38  
                       l157 1B3C                         l149 1758                         l174 1B86  
                       l158 1B40                         l159 1B44                         l335 1CA4  
                       l176 1B8E                         l336 1CA2                         l178 1B96  
                       l825 1AD4                         u180 1A1E                         u188 1A20  
                       _abs 1C0E                ___awmod@sign 0051                         prod 000FF3  
                       wreg 000FE8          __size_of_AUDIO_ISR 0032                        l1008 1C2C  
                      ?_abs 003E                        l2021 10D6                        l2013 10A2  
                      l2103 1278                        l2041 114E                        l2009 1094  
                      l2035 112A                        l2019 10D0                        l2141 131E  
                      l2311 169E                        l2207 1456                        l2119 12C2  
                      l2321 16C6                        l2313 16AA                        l2241 14FC  
                      l2137 1316                        l2129 12F6                        l2073 11FE  
                      l2065 11DA                        l2057 11BE                        l2227 14C4  
                      l2163 13A2                        l2155 1378                        l2075 1206  
                      l2333 16E8                        l2325 16D4                        l2309 1692  
                      l2173 13CA                        l2077 120C                        l2069 11EA  
                      l2341 1C7E                        l2255 154A                        l2239 14F6  
                      l2095 1238                        l2335 16EE                        l2273 15C2  
                      l2169 13BA                        l2097 1250                        l2089 1228  
                      l2291 1612                        l2339 1C7A                        l2277 15D2  
                      l1831 1B48                        l1815 19A0                        l2287 15F6  
                      l1833 1B4E                        l1931 18F4                        l1923 18DA  
                      l1819 19B4                        l1933 18FC                        l1853 1C70  
                      l1943 191E                        l1927 18E6                        l1947 192C  
                      l1939 1914                        l1957 1AA2                        l1959 1AAA  
                      l1969 1ACA                        l1897 1BA6                        l1987 103C  
                      u1330 1AAE                        u1410 1068                        u1180 1C6C  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      u1521 11F6                        u1290 1900                        u1470 1140  
                      u1901 1512                        u1911 1598                        u1951 1602  
                      _TMR1 000FCE                        abs@a 003E                _start_melody 0100  
                      _main 1C74                        _init 1ADE                        _rand 1A3A  
                      _time 0031                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0056                        _stop 0036  
                      prodl 000FF3                        start 1012                ___param_bank 000000  
       __size_of_AUDIO_init 0014         __size_of_AUDIO_play 0010         __size_of_AUDIO_stop 0006  
                     ??_abs 0040                       ?_main 003D                       ?_init 003D  
                     ?_rand 004A             __end_of___awmod 1936             __end_of___lwdiv 1ADE  
    __size_of_fsm_cube_init 0032                       _TMR0H 000FD7                       _TMR0L 000FD6  
                     _TMR3H 000FB3                       _TMR3L 000FB2         ___lmul@multiplicand 0042  
                     _count 002B                       _index 0025                       _randx 001F  
                     _loser 0038                       _score 002D                       _srand 1CC2  
      __size_of_checkbutton 0034                       tablat 000FF5                       ttemp5 0057  
                     ttemp6 005A                       ttemp7 005E                       status 000FD8  
                     wtemp8 0057             __initialization 175A           __end_of_AUDIO_ISR 1C0E  
              __end_of_main 1C8C                __end_of_init 1B2C                __end_of_rand 1A8C  
                    ??_main 0056                      ??_init 0041                      ??_rand 004C  
             __activetblptr 000002                      ?_srand 003E                  _OpenTimer0 19E6  
                _OpenTimer1 1854                      i2l1673 1C0A                      i2l1669 1BEC  
             _fsm_cube_init 1BAA            __end_of_fire_led 1B76                      ___lmul 1990  
                 ??___awmod 0050                   ??___lwdiv 0042            __end_of_fsm_cube 175A  
                    clear_0 17C0                      clear_1 17CC             ___awmod@divisor 004E  
           ___awmod@counter 0050                      _status 0039                __pdataCOMRAM 0001  
                    tblptrh 000FF7                      tblptrl 000FF6                ??_AUDIO_init 0041  
                    tblptru 000FF8                ??_AUDIO_play 0040                      srand@x 003E  
              ??_AUDIO_stop 003E      __size_of_buttonpressed 001C              AUDIO_play@freq 003E  
                __accesstop 0060     __end_of__initialization 17D2              ?_fsm_cube_init 003D  
             ___rparam_used 000001              __pcstackCOMRAM 003D                __pidataBANK0 1936  
              __pidataBANK1 17E0          __end_of_AUDIO_init 1CA0          __end_of_AUDIO_play 1CC2  
        __end_of_AUDIO_stop 1CD6               __end_of_srand 1CD0                     ??_srand 0040  
                __pbssBANK2 0200                 ?_OpenTimer0 003D                 ?_OpenTimer1 003D  
             _current_state 003C              fire_led@ledint 003E                     ?___lmul 003E  
             _buttonpressed 1C58              ___lmul@product 0046                     i2u96_40 1BF6  
                   i2u97_48 1BF8                   ?_fire_led 003D             ??_fsm_cube_init 003E  
                _led_switch 003B                   ?_fsm_cube 003D                     __Hparam 0000  
                   __Lparam 0000             __size_of___lmul 0056                     ___awmod 18C6  
            ?_buttonpressed 003D                     ___lwdiv 1A8C                   _AUDIO_ISR 1BDC  
                   __pcinit 175A                     __ramtop 0800         __size_of_OpenTimer0 0054  
       __size_of_OpenTimer1 0072                     __ptext0 1C74                     __ptext1 1CA0  
                   __ptext2 1ADE                     __ptext3 1BAA                     __ptext4 19E6  
                   __ptext5 1C8C                     __ptext6 1854                     __ptext7 1016  
                   __ptext8 1CC2                     __ptext9 1A3A                   _T0CONbits 000FD5  
                 _T1CONbits 000FCD                __size_of_abs 0028                   _T3CONbits 000FB1  
          ___awmod@dividend 004C               ??_checkbutton 003E                  ??_fire_led 003E  
      end_of_initialization 17D2               ?_timed_to_1ms 003D                  ??_fsm_cube 0052  
             __Lmediumconst 0000                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE                  ?_AUDIO_ISR 003D  
                 _PORTBbits 000F81                   _PORTCbits 000F82                   _TRISAbits 000F92  
                 _TRISBbits 000F93                   _TRISCbits 000F94              ??_timed_to_1ms 003E  
       __end_of_checkbutton 1BAA             ??_buttonpressed 003E              __end_of___lmul 19E6  
             __pidataCOMRAM 1C36         start_initialization 175A                 __end_of_abs 1C36  
              ??_OpenTimer0 003E                ??_OpenTimer1 003E                    ??___lmul 0046  
               __pdataBANK0 0060                 __pdataBANK1 0100                 ??_AUDIO_ISR 003D  
        __end_of_OpenTimer0 1A3A          __end_of_OpenTimer1 18C6                 __pbssCOMRAM 0023  
               _checkbutton 1B76                 _led1_output 0033           __size_of_fire_led 004A  
         __size_of_fsm_cube 0744                _melody_index 0037            ___lwdiv@dividend 003E  
                 _all_notes 0001                   _game_time 002F                 _game_lenght 0029  
                 __pintcode 1008                    ?___awmod 004C                    ?___lwdiv 003E  
      __end_of_timed_to_1ms 1CB2         OpenTimer0@intEnable 0040           _interrupt_handler 1008  
        ?_interrupt_handler 003D            ___lwdiv@quotient 0042         OpenTimer1@intEnable 0040  
            __size_of_srand 000E         ??_interrupt_handler 003E       __end_of_fsm_cube_init 1BDC  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _IPR1bits 000F9F  
                  _IPR2bits 000FA2                    _PIE1bits 000F9D                    _PIE2bits 000FA0  
                  _PIR1bits 000F9E                    _PIR2bits 000FA1                   _wait_time 0027  
 __end_of_interrupt_handler 1012           ___lmul@multiplier 003E                   copy_data0 176E  
                 copy_data1 178E                   copy_data2 17AE                    __Hrparam 0000  
                  __Lrparam 0000              _servo_setpoint 0035            __size_of___awmod 0070  
          __size_of___lwdiv 0052                  _ANSELCbits 000F5D                _loser_melody 0060  
                  _game3seq 0200             ___lwdiv@divisor 0040                  _AUDIO_init 1C8C  
                _AUDIO_play 1CB2             ___lwdiv@counter 0044                  _AUDIO_stop 1CD0  
                  __ptext10 1990                    __ptext11 1B2C                    __ptext20 1BDC  
                  __ptext12 1B76                    __ptext13 1C58                    __ptext14 1C0E  
                  __ptext15 1A8C                    __ptext16 18C6                    __ptext17 1CD0  
                  __ptext18 1CB2                    _fire_led 1B2C                    _fsm_cube 1016  
             __size_of_main 0018               __size_of_init 004E               __size_of_rand 0052  
                  _next_led 003A       __size_of_timed_to_1ms 0012                    int$flags 0056  
     __end_of_buttonpressed 1C74  __size_of_interrupt_handler 000A               _timer_preload 0023  
             _servo_counter 0034                  _INTCONbits 000FF2                ?_checkbutton 003D  
                  intlevel2 0000                _timed_to_1ms 1CA0                  _OSCCONbits 000FD3  
               ?_AUDIO_init 003D                 ?_AUDIO_play 003E                 ?_AUDIO_stop 003D  
